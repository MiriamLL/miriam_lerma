[
  {
    "path": "posts/2022-01-21-sharedareas/",
    "title": "Shared Areas",
    "description": "Calculate area per polygon, their intersection and the shared areas",
    "author": [
      {
        "name": "Miriam Lerma",
        "url": {}
      }
    ],
    "date": "2022-01-21",
    "categories": [
      "R",
      "spatial",
      "shapefiles",
      "English"
    ],
    "contents": "\r\nIntro\r\nHere, some steps for:\r\nGenerating kernel polygons\r\nCalculating the intersection between two polygons\r\nPlotting polygons and their intersection\r\nCreating a table with the shared areas between two polygons\r\nData\r\nTo replicate the exercise, load data from the package ‘sula’. For accessing the data, you need to have the package installed.\r\n\r\n\r\n#devtools::install_github(\"MiriamLL/sula\")\r\nlibrary(sula)\r\n\r\n\r\n\r\nThe data is from 10 tracked individuals.\r\n\r\n\r\nGPS_raw<-(GPS_raw)\r\n\r\n\r\n\r\nCreate polygons\r\nSelect which individuals you want to compare\r\n\r\n\r\nGPS01<-subset(GPS_raw,GPS_raw$IDs=='GPS01')\r\nGPS02<-subset(GPS_raw,GPS_raw$IDs=='GPS02')\r\n\r\n\r\n\r\nWith the following function you can create the polygon of the individual using an specific value.\r\nYour need to provide the name of the column that contains the latitude, the name of the column that contains the longitude, and the value you want to calculate (E.g. core=50, general=95).\r\n\r\n\r\ncreate_polygon<-function(Data=Data, lon_col=lon_col,lat_col=lat_col,value=value){\r\n  \r\n  Data<-Data\r\n  Data$Longitude<-Data[[lon_col]]\r\n  Data$Latitude<-Data[[lat_col]]\r\n    \r\n  #convert to spatial\r\n  DataSp<-as.data.frame(Data)\r\n  sp::coordinates(DataSp) <- c(\"Longitude\", \"Latitude\")\r\n  sp::proj4string(DataSp) <- sp::CRS(\"+init=epsg:4326\")\r\n  \r\n  #create polygon\r\n  DataSp<-adehabitatHR::kernelUD(DataSp,h=\"href\") # Using reference\r\n  Data_50<-adehabitatHR::getverticeshr(DataSp,percent=value)\r\n  \r\n  Data_sf_50<-sf::st_as_sf(Data_50)\r\n  \r\n  return(Data_sf_50)\r\n}\r\n\r\n\r\n\r\nCalculate polygons of 50%.\r\nSome warnings may appear\r\n\r\n\r\nGPS01_50<-create_polygon(Data=GPS01,lat_col=\"Latitude\",lon_col=\"Longitude\",value=50)\r\nGPS02_50<-create_polygon(Data=GPS02,lat_col=\"Latitude\",lon_col=\"Longitude\",value=50)\r\n\r\n\r\n\r\nCalculate polygons of 95%.\r\n\r\n\r\nGPS01_95<-create_polygon(Data=GPS01,lat_col=\"Latitude\",lon_col=\"Longitude\",value=95)\r\nGPS02_95<-create_polygon(Data=GPS02,lat_col=\"Latitude\",lon_col=\"Longitude\",value=95)\r\n\r\n\r\n\r\nCompare\r\nWith the function intersection of the package sf you can obtain the area where both polygons intersect\r\n\r\n\r\nlibrary(sf)\r\n\r\n\r\n\r\n\r\n\r\n\r\nSource: Geocompr\r\n\r\n\r\nIntersection_95<-st_intersection(GPS01_95,GPS02_95)\r\nIntersection_50<-st_intersection(GPS01_50,GPS02_50)\r\n\r\n\r\n\r\nPlot\r\nUsing the following function plot_overlaps and the package ggplot, you can visualize where the intersection is occurring\r\n\r\n\r\nlibrary(ggplot2)\r\n\r\n\r\n\r\n\r\n\r\nplot_overlaps<-function(ID1_95=ID1_95,ID1_50=ID1_50,ID2_95=ID2_95,ID2_50=ID2_50){\r\n  \r\n  Plot<-ggplot2::ggplot()+\r\n  \r\n    ggplot2::geom_sf(data = ID1_95,color='#d00000',fill = \"#d00000\",alpha=0.3,size=1)+ \r\n    ggplot2::geom_sf(data = ID2_95,color='#3f88c5',fill = \"#3f88c5\",alpha=0.3,size=1)+\r\n    ggplot2::geom_sf(data = Intersection_95,  color='#ffba08', fill = \"#ffba08\",alpha=0.3,size=1)+\r\n    \r\n    ggplot2::geom_sf(data = ID1_50,color='#d00000',fill = \"#d00000\",alpha=0.7,size=1)+\r\n    ggplot2::geom_sf(data = ID2_50,color='#3f88c5', fill = \"#3f88c5\",alpha=0.7,size=1)+ \r\n    ggplot2::geom_sf(data = Intersection_50,  color='#ffba08', fill = \"#ffba08\",alpha=0.7,size=1)+\r\n    \r\n    ggplot2::labs(x = \"Longitude\", y=\"Latitude\")+\r\n    \r\n    theme_bw()\r\n  \r\n  return(Plot)\r\n}\r\n\r\n\r\n\r\nIt would show a map with your polygons\r\n\r\n\r\noverlap_plot<-plot_overlaps(ID1_95=GPS01_95,\r\n                            ID1_50=GPS01_50,\r\n                            ID2_95=GPS02_95,\r\n                            ID2_50=GPS02_50)\r\n  \r\noverlap_plot\r\n\r\n\r\n\r\n\r\nCreate table\r\nOnce you have your polygons for each individual and also the intersection between polygons, you can now create a table using the following custom function table_areas\r\nTo calculate the shared area, the function follows the formula as in Hedd et al. 2014\r\n\r\n\r\ntable_areas<-function(ID1_50=ID1_50,\r\n                      ID2_50=ID2_50,\r\n                      ID1_95=ID1_95,\r\n                      ID2_95=ID2_95,\r\n                      Intersection_50=Intersection_50,\r\n                      Intersection_95=Intersection_95){\r\n  \r\n  Tabla<-data.frame(\r\n  UDs=c(\"50\",\"95\"),\r\n  \r\n  ID1_area_km2=c(\r\n    round(as.numeric(units::set_units(st_area(ID1_50),km^2)),2),\r\n    round(as.numeric(units::set_units(st_area(ID1_95),km^2),2))\r\n    ),\r\n  \r\n  ID2_area_km2=c(\r\n    round(as.numeric(units::set_units(st_area(ID2_50),km^2),2)),\r\n    round(as.numeric(units::set_units(st_area(ID2_95),km^2),2))\r\n    ),\r\n  \r\n  intersection_area_km2=c(\r\n    round(as.numeric(units::set_units(st_area(Intersection_50),km^2),2)),\r\n    round(as.numeric(units::set_units(st_area(Intersection_95),km^2),2))\r\n  )\r\n  )\r\n  \r\n  Tabla$shared_area_percent<-\r\n  (Tabla$intersection_area_km2)/\r\n    (\r\n      (Tabla$ID1_area_km2 - Tabla$intersection_area_km2) + \r\n       (Tabla$ID2_area_km2 - Tabla$intersection_area_km2) + \r\n       Tabla$intersection_area_km2)\r\n  \r\n  return(Tabla)\r\n}\r\n\r\n\r\n\r\nThe table contains the area of each polygon, the intersection and the shared areas\r\n\r\n\r\nareas_table<-table_areas(ID1_50=GPS01_50,\r\n                      ID2_50=GPS02_50,\r\n                      ID1_95=GPS01_95,\r\n                      ID2_95=GPS02_95,\r\n                      Intersection_50=Intersection_50,\r\n                      Intersection_95=Intersection_95)\r\n\r\n\r\n\r\nIt should return a table as the following:\r\n\r\n\r\nUDs\r\n\r\n\r\nID1_area_km2\r\n\r\n\r\nID2_area_km2\r\n\r\n\r\nintersection_area_km2\r\n\r\n\r\nshared_area_percent\r\n\r\n\r\n50\r\n\r\n\r\n7.5\r\n\r\n\r\n8\r\n\r\n\r\n5\r\n\r\n\r\n0.4761905\r\n\r\n\r\n95\r\n\r\n\r\n546.0\r\n\r\n\r\n380\r\n\r\n\r\n215\r\n\r\n\r\n0.3023910\r\n\r\n\r\nExport\r\nTo export the table as csv:\r\n\r\n\r\nwrite_csv(areas_table,'areas_table.csv')\r\n\r\n\r\n\r\nTo export the polygons as shapefiles:\r\n\r\n\r\nst_write(GPS01_50, \"GPS01_50.shp\")\r\nst_write(GPS02_50, \"GPS02_95.shp\")\r\nst_write(Intersection_50, \"Intersection_50.shp\")\r\n\r\nst_write(GPS01_95, \"GPS01_95.shp\")\r\nst_write(GPS02_95, \"GPS02_95.shp\")\r\nst_write(Intersection_95, \"Intersection_95.shp\")\r\n\r\n\r\n\r\nRecommended literature\r\nGeocomputation in R\r\nShared areas formula by Hedd et al. 2018\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-01-21-sharedareas/blog7.jpg",
    "last_modified": "2022-01-21T16:22:17+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-11-25-embc/",
    "title": "EMbC",
    "description": "Classify behaviours using Expectation-Maximization Binary Clustering.",
    "author": [
      {
        "name": "Miriam Lerma",
        "url": {}
      }
    ],
    "date": "2021-11-25",
    "categories": [
      "R",
      "funciones",
      "English"
    ],
    "contents": "\r\nIntro\r\nIn this post, you will learn how to:  - Classify behavioural states during foraging trips from test data from Masked boobies. \r\nData\r\nLoad data. This test data is from masked boobies.  To access the data you have to install the package sula: devtools::install_github(“MiriamLL/sula”)\r\n\r\n\r\n#devtools::install_github(\"MiriamLL/sula\")\r\nlibrary(sula)\r\n\r\n\r\n\r\n\r\n\r\nGPS_raw<-as.data.frame(GPS_raw)\r\nGPS_ind<-subset(GPS_raw,GPS_raw$IDs=='GPS01')\r\n\r\n\r\n\r\nNest or no nest?\r\nThe data I am using does not include locations when the animal was on the nest.\r\nTo remove the nest locations, in the package sula there is this function recortar_periodo which allows you to filter your data and keep the period when the bird was at sea.\r\nFor the example, I know the time when this individual (GPS_01) started and ended its trip and keep the locations inside this time range.\r\nIf you dont have this information, you might need to first identify the start and end of trips.\r\n\r\n\r\nGPS_ind<-recortar_periodo(GPS_data=GPS_ind,\r\n                                inicio='02/11/2017 18:10:00',\r\n                                final='05/11/2017 14:10:00',\r\n                                dia_col='DateGMT',\r\n                                hora_col='TimeGMT',\r\n                                formato=\"%d/%m/%Y %H:%M:%S\")\r\n\r\n\r\nEl track original contenia 1038 filas y el track editado contiene 986 filas\r\n\r\nNext, I create a new column named tStamp and transformed it to the corresponding class.\r\n\r\n\r\nGPS_ind$tStamp<-paste(GPS_ind$DateGMT,GPS_ind$TimeGMT)\r\nGPS_ind$tStamp <- as.POSIXct(strptime(GPS_ind$tStamp,\"%d/%m/%Y %H:%M:%S\"),\"GMT\")\r\nclass(GPS_ind$tStamp)\r\n\r\n\r\n[1] \"POSIXct\" \"POSIXt\" \r\n\r\nCheck that you have the right class for your columns.\r\n\r\n\r\nGPS_ind$lon<-as.numeric(GPS_ind$Longitude)\r\nGPS_ind$lat<-as.numeric(GPS_ind$Latitude)\r\nGPS_ind$id <- as.factor(GPS_ind$IDs)\r\n\r\n\r\n\r\nThen I select only columns that will be important in the analyses.\r\n\r\n\r\nlibrary(tidyverse)\r\n\r\n\r\n\r\n\r\n\r\nData<-GPS_ind%>%\r\n  select('id','tStamp','lon','lat')\r\nhead(Data)\r\n\r\n\r\n      id              tStamp       lon       lat\r\n17 GPS01 2017-11-02 18:11:57 -109.4530 -27.20092\r\n18 GPS01 2017-11-02 18:16:04 -109.4531 -27.20096\r\n19 GPS01 2017-11-02 18:20:10 -109.4530 -27.20096\r\n20 GPS01 2017-11-02 18:24:16 -109.4530 -27.20094\r\n21 GPS01 2017-11-02 18:28:24 -109.4530 -27.20096\r\n22 GPS01 2017-11-02 18:32:29 -109.4531 -27.20099\r\n\r\nEMbC\r\nI strongly recommend to read this article by Garriga et al. 2016 and to check the vignette.\r\nAs in vignette: ‘The Expectation-maximization binary clustering (EMbC) is a general purpose, unsupervised, multi-variate, clustering algorithm, driven by two main motivations: (i) it looks for a good compromise between statistical soundness and ease and generality of use - by minimizing prior assumptions and favouring the semantic interpretation of the final clustering - and, (ii) it allows taking into account the uncertainty in the data. These features make it specially suitable for the behavioural annotation of animal’s movement trajectories.’\r\nYou need to have the package installed otherwise you need to install it using the install.packages(‘EMbC’).\r\n\r\n\r\nlibrary(EMbC)\r\n\r\n\r\n\r\nIn the package EMbC, the function stbc performs the standard velocity/turn clustering of the trajectory.\r\nIn the script, [2:4] means that you are including from the 2nd to the 4th column. These columns should be 2th - tStamp, 3th - lon, and 4th - lat.\r\nThe -1 in info means that any iteration is supress.\r\n\r\n\r\nData_bc<-stbc(Data[2:4],info=-1) \r\n\r\n\r\n[1]   0  -0.0000e+00       4       986\r\n[1] ... Stable clustering\r\n\r\nCheck delimiters\r\nMean and sd\r\nIn the package EMbC, the function stts offers a compact view of the parameter set.\r\nLL stands for Low velocity Low turn\r\nLH stands for Low velocity High turn\r\nHL stands for High velocity Low turn\r\nHH stands for High velocity High turn\r\nkn is the marginal distribution of the cluster in absolute and percentage values\r\n\r\n\r\nstts(Data_bc)\r\n\r\n\r\n         X1.mn    X1.sd    X2.mn    X2.sd     kn  kn(%)\r\n 1 LL     0.06     0.10     1.47     0.86    519  52.64 \r\n 2 LH     0.08     0.10     2.95     0.14    293  29.72 \r\n 3 HL     9.51     5.07     0.17     0.13    103  10.45 \r\n 4 HH     4.83     3.94     1.59     0.92     70   7.10 \r\n\r\nMins and Maxs\r\nYou can also check the mimimum and maximum velocity and radians (turning angle) using the function @R from the package EMbC.\r\nX1.min is the minimum velocity\r\nX2.min is the minimum turning angle\r\nX1.max is the maximum velocity\r\nX2.max is the maximum turning angle\r\n\r\n\r\nData_bc@R\r\n\r\n\r\n        X1.min    X2.min     X1.max    X2.max\r\n1.LL 0.0000000 0.0000000  0.9197180 2.6603235\r\n2.LH 0.0000000 2.6603235  0.4699243 3.1409141\r\n3.HL 0.9197180 0.0000000 20.2502838 0.4694153\r\n4.HH 0.4699243 0.4694153 20.2502838 3.1409141\r\n\r\nHere is important that you check that these values make sense. Turning angle should be between 0 and 3.14. Velocity varies according to your species.\r\nFor boobies this information can be translated to:\r\nLL for Resting\r\nLH for Intense foraging\r\nHL for Travelling\r\nHH for Relocating\r\nYou can also compare your results with Table 2 in Mendez et al. 2017, or in methods from Lerma et al. 2020\r\nGraphically\r\nTo see this information graphically, you can use the function sctr from the package EMbC.\r\nLL - Resting - in orange\r\nLH - Intense foraging - in red\r\nHL - Travelling - in light blue\r\nHH - Relocating - in dark blue\r\n\r\n\r\nsctr(Data_bc)\r\n\r\n\r\n\r\n\r\nTo see how the track looks according to the classification you can use the view function from the package EMbC.\r\n\r\n\r\nEMbC::view(Data_bc)\r\n\r\n\r\n\r\n\r\nExport delimiters\r\nTo export the delimiters you can extract information using @R into a data frame and rename the columns.\r\n\r\n\r\nClass_bc<-as.data.frame(Data_bc@R)\r\nnames(Class_bc)<-c('velocity.min','radian.min','velocity.max','radian.max')\r\n\r\n\r\n\r\nOriginally, the values of velocity are in m/s, therefore you can convert them to km/h to compare with the literature more easily.\r\n\r\n\r\nClass_bc$velomin_km<-Class_bc$velocity.min*3.6\r\nClass_bc$velomax_km<-Class_bc$velocity.max*3.6\r\n\r\n\r\n\r\nYou can use the function write_csv to export the delimiters.\r\nIn the example below, I use the function here and define the folder where I want the file to be.\r\n\r\n\r\nlibrary(here)\r\nDatosFolder<-here::here(\"01Datos\")\r\nwrite_csv(\r\n  Class_bc,\r\n  file=paste0(DatosFolder,'/Behavioural_delimiters.csv'))\r\n\r\n\r\n\r\nTracking data\r\nBehaviors\r\nYou can add the information of velocity and turning angle into you GPS data using the function @A from the package EMbC\r\n\r\n\r\nData$Beha<-Data_bc@A\r\n\r\n\r\n\r\nIt returns numbers which correspond to:\r\n1 - LL - Resting\r\n2 - LH - Intense foraging\r\n3 - HL - Travelling\r\n4 - HH - Relocating\r\n5 - Unknown\r\nIf you want to add a column explaining what this numbers mean you can use the following functions.\r\n\r\n\r\nlibrary(dplyr)\r\n\r\n\r\n\r\n\r\n\r\nData<-mutate(Data, Beha_class = ifelse(Data$Beha == \"1\", \"LL\",\r\n                                        ifelse(Data$Beha == \"2\", \"LH\",\r\n                                               ifelse(Data$Beha == \"3\", 'HH',\r\n                                                      ifelse(Data$Beha == \"4\", \"HL\", \r\n                                                             \"Unknown\")))))\r\n\r\n\r\n\r\nor\r\n\r\n\r\nData<-mutate(Data, Behaviour = ifelse(Data$Beha == \"1\", \"Resting\",\r\n                                        ifelse(Data$Beha == \"2\", \"Intense foraging\",\r\n                                               ifelse(Data$Beha == \"3\", 'Travelling',\r\n                                                      ifelse(Data$Beha == \"4\", \"Relocating\", \r\n                                                             \"Unknown\")))))\r\n\r\n\r\n\r\nVelocity\r\nYou can add the velocity in a colum of your GPS data frame using the function @X from the package EMbC\r\n\r\n\r\nhead(Data_bc@X)\r\n\r\n\r\n     velocity (m/s) turn (rad)\r\n[1,]    0.038911247  0.0000000\r\n[2,]    0.036230799  2.6587646\r\n[3,]    0.009904929  1.1311206\r\n[4,]    0.011112843  3.0577897\r\n[5,]    0.033537583  0.6261461\r\n[6,]    0.037807521  0.2016767\r\n\r\nVelocity is in the first column, therefore we use the [,1]. Also, to transform it to km/h multiply per 3.6.\r\n\r\n\r\nData$Velocity_ms<-Data_bc@X[,1]\r\nData$Velocity_kmh<-Data$Velocity_ms*3.6\r\n\r\n\r\n\r\nHeading direction\r\nHeading direction is on the second column, therefore we use the [,2].\r\n\r\n\r\nData$HeadingDirection<-Data_bc@X[,2]\r\n\r\n\r\n\r\nCheck\r\nFinally you can check the range to coincide with your delimiters.\r\n\r\n\r\nData %>% \r\n  group_by(Behaviour) %>%\r\n  summarise(Velo_min=min(Velocity_kmh),\r\n            Velo_max=max(Velocity_kmh),\r\n            Angle_min=min(HeadingDirection),\r\n            Angle_max=max(HeadingDirection))\r\n\r\n\r\n# A tibble: 5 x 5\r\n  Behaviour        Velo_min Velo_max Angle_min Angle_max\r\n  <chr>               <dbl>    <dbl>     <dbl>     <dbl>\r\n1 Intense foraging  0.0172      1.60   2.68        3.14 \r\n2 Relocating        1.44       47.6    0.507       3.14 \r\n3 Resting           0.00363     1.38   0           2.68 \r\n4 Travelling        1.45       72.9    0.00105     0.499\r\n5 Unknown           0           0      0           0    \r\n\r\nPlot\r\nYou can plot the GPS tracking data according to their behaviours using the function ggplot\r\n\r\n\r\nggplot(data = Data, \r\n           aes(x=lon, y = lat))+\r\n  geom_point(aes(colour = Behaviour))+\r\n  theme_bw()+\r\n  theme(legend.position = \"bottom\") +\r\n   labs(x = \"Longitude\", y=\"Latitude\")+\r\n  ggtitle('Fig. Tracks')\r\n\r\n\r\n\r\n\r\nFurther\r\nIf you are not satisfied with the classification and the delimiters, you can set your own behavioural classification using the turning angle and velocity.\r\nFor example, using data from Mendez et al 2017.\r\n\r\n\r\nData<-mutate(Data, New_beha = ifelse(Data$Velocity_kmh >= 0 & \r\n                                      Data$Velocity_kmh <= 4 &\r\n                                      Data$HeadingDirection >= 0 &\r\n                                      Data$HeadingDirection <= 0.30, \r\n                                      \"Resting\",\r\n                               ifelse(Data$Velocity_kmh >= 0 & \r\n                                      Data$Velocity_kmh <= 14 &\r\n                                      Data$HeadingDirection >= 0.30 &\r\n                                      Data$HeadingDirection <= 3.14, \r\n                                      \"IntenseForaging\",\r\n                                ifelse(Data$Velocity_kmh >= 4 & \r\n                                      Data$Velocity_kmh <= 90 &\r\n                                      Data$HeadingDirection >= 0 &\r\n                                      Data$HeadingDirection <= 0.31, \r\n                                      \"Travelling\",\r\n                                ifelse(Data$Velocity_kmh >= 14 & \r\n                                      Data$Velocity_kmh <= 90 &\r\n                                      Data$HeadingDirection >= 0.31 &\r\n                                      Data$HeadingDirection <= 3.14, \r\n                                      \"Relocating\",\r\n                                    \"Unknown\")))))\r\n\r\n\r\n\r\n\r\n\r\nggplot(data = Data, \r\n           aes(x=lon, y = lat))+\r\n  geom_point(aes(colour = New_beha))+\r\n  theme_bw()+\r\n  theme(legend.position = \"bottom\") +\r\n   labs(x = \"Longitude\", y=\"Latitude\")+\r\n  ggtitle('Fig. Tracks')\r\n\r\n\r\n\r\n\r\nReferences and recommended literature\r\nEMbC\r\nGarriga et al. 2016\r\nVignette\r\nBoobies\r\nLerma et al. 2020\r\nMendez et al. 2017\r\nOther Species\r\nConnectedPapers\r\nAlternative options\r\nHidden Markov Models\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-11-25-embc/blog6.jpg",
    "last_modified": "2021-11-25T16:05:47+01:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-10-27-gitgithub/",
    "title": "Git & Github",
    "description": "A short intro.",
    "author": [
      {
        "name": "Miriam Lerma",
        "url": {}
      }
    ],
    "date": "2021-10-27",
    "categories": [
      "R",
      "Git",
      "Github",
      "English"
    ],
    "contents": "\r\n\r\n\r\n\r\nIntro\r\nIn this presentation, we will have a short intro on: - Git - Github - Reproducibility - Git+Github - Naming things\r\n⚡⚡⚡\r\n\r\n\r\n\r\n\r\n Open presentation\r\n\r\n⚡⚡⚡\r\nKeen to learn more?\r\nHappy git: Happy Git by Jennifer Bryan\r\nTutorials RLadiesFreiburg\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-10-27-gitgithub/portada1.jpg",
    "last_modified": "2021-10-29T11:33:07+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-09-24-home-range-adehabitathr/",
    "title": "Home Range & adehabitatHR",
    "description": "Export polygons generated from adehabitat.",
    "author": [
      {
        "name": "Miriam Lerma",
        "url": {}
      }
    ],
    "date": "2021-09-24",
    "categories": [
      "R",
      "spatial",
      "shapefiles",
      "English"
    ],
    "contents": "\r\nIntro\r\nIn this post, you will learn how to:  - Calculate UDs from test data from Masked boobies.  - Calculate UDs using adehabitat.  - Export UDs as shapefiles to visualize in other programs. \r\nNote that reference system must be adjusted, also href can be adapted.\r\nData\r\nLoad data. This test data is from masked boobies.  To access the data you have to install the package sula: devtools::install_github(“MiriamLL/sula”)\r\n\r\n\r\n#devtools::install_github(\"MiriamLL/sula\")\r\nlibrary(sula)\r\nData<-(GPS_raw)\r\n\r\n\r\n\r\nYou can use the structure of the data to organize your data similarly. It also works with csv data (if you have excel data you can also save it as csv data an import it to R)\r\nTransform to spatial.\r\nYou can use the package sp to transform your data frame to spatial data (in this case you end up with SpatialPointsDataFrame). This way you can tell R that you have coordinates. If you dont have the package sp you need to install it.\r\n\r\n\r\n#install.packages('sp')\r\nlibrary(sp)\r\nDataSp<-as.data.frame(Data)\r\ncoordinates(DataSp) <- c(\"Longitude\", \"Latitude\")\r\nclass(DataSp)\r\n\r\n\r\n[1] \"SpatialPointsDataFrame\"\r\nattr(,\"package\")\r\n[1] \"sp\"\r\n\r\nKernel adehabitat\r\nIf you dont have the package adehabitat you have to install it. I strongly encourage you to read the vignette, here is the link..\r\n\r\n\r\n#install.packages('adehabitatHR')\r\nlibrary(adehabitatHR)\r\nDataUD<-kernelUD(DataSp[,3],h='href') #3 is for the ID  #Here I am using the reference h value\r\nimage(DataUD)\r\n\r\n\r\n\r\n\r\nNow you have a object class estUDm as a result.\r\n\r\n\r\nclass(DataUD)\r\n\r\n\r\n[1] \"estUDm\"\r\n\r\nThe function getvertices calculates the polygon. You can adjust the percent, here I stated 95%.\r\n\r\n\r\nDataUD_pol <- getverticeshr(DataUD, percent = 95, unout = c(\"m2\"))\r\n\r\n\r\n\r\nOne individual\r\nYou can select the data from one individual to create individual UDs.\r\n\r\n\r\nGPS01<-subset(Data,Data$IDs=='GPS01')\r\n\r\n\r\n\r\nAs before, you transform the data frame to SpatialPointsDataFrame and calculate the kernels using the reference value.\r\n\r\n\r\nhead(GPS01)\r\n\r\n\r\n   Latitude Longitude    DateGMT  TimeGMT   IDs\r\n1 -27.20097 -109.4531 02/11/2017 17:05:30 GPS01\r\n2 -27.20084 -109.4531 02/11/2017 17:09:35 GPS01\r\n3 -27.20053 -109.4529 02/11/2017 17:13:50 GPS01\r\n4 -27.20092 -109.4531 02/11/2017 17:17:59 GPS01\r\n5 -27.20065 -109.4529 02/11/2017 17:22:13 GPS01\r\n6 -27.20061 -109.4528 02/11/2017 17:26:25 GPS01\r\n\r\nGPS01Sp<-as.data.frame(GPS01)\r\ncoordinates(GPS01Sp) <- c(\"Longitude\", \"Latitude\")\r\nproj4string(GPS01Sp) <- CRS(\"+proj=utm +zone=12 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs\")\r\nGPS01UD=kernelUD(GPS01Sp,h=\"href\") # Using reference\r\nGPS01UD\r\n\r\n\r\n********** Utilization distribution of an Animal ************\r\n\r\nType: probability density\r\nSmoothing parameter estimated with a  href parameter\r\nThis object inherits from the class SpatialPixelsDataFrame.\r\nSee estUD-class for more information\r\n\r\nYou can check the h value used with the following line. This is important because it can be adjusted and you should state it while describing your methods.\r\n\r\n\r\nGPS01UD@h\r\n\r\n\r\n$h\r\n[1] 0.02096601\r\n\r\n$meth\r\n[1] \"href\"\r\n\r\nThe most common home ranges calculations are the 50% and the 95% areas. Here are some lines to obtain those polygons.\r\n\r\n\r\nGPS01UD95HR<-getverticeshr(GPS01UD,percent=95)\r\nGPS01UD50HR<-getverticeshr(GPS01UD,percent=50)\r\n\r\n\r\n\r\nHere you can check on you polygons visually.\r\n\r\n\r\nplot(GPS01UD95HR, col='yellow')\r\nplot(GPS01UD50HR, col='green', add=TRUE)\r\n\r\n\r\n\r\n\r\nExport\r\nI advice to first identify which folder do you want to use to save your polygons. I have an Rproject and I have created a folder named GIS where I want my polygons to be.\r\n\r\n\r\nlibrary(here)\r\nhere()\r\nGISFolder<-paste0(here())\r\n\r\n\r\n\r\nThere are many ways to export your polygons.\r\nOne is using the package rgdal which comes from Geospatial Data Abstraction Library.\r\n\r\n\r\n#install.packageS('rdgal')\r\nlibrary(rgdal)\r\nwriteOGR(GPS01UD95HR, dsn = GISFolder, layer = 'GPS01HR95', driver = \"ESRI Shapefile\")\r\n\r\n\r\n\r\nThe other way to export your polygons is using the package sf. However, to be able to export your polygons, they should be transform to a sf object.\r\n\r\n\r\nlibrary(sf)\r\nclass(GPS01UD95HR)\r\nGPS01SF95<-st_as_sf(GPS01UD95HR)\r\nst_write(GPS01SF95, paste0(here(), \"/\", \"GPS01SF95.shp\"))\r\n\r\n\r\n\r\n… and thats it.\r\nHopefully now you have your shapefiles that can be open in any GIS software such as QGIS.\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-09-24-home-range-adehabitathr/blog1.jpg",
    "last_modified": "2021-10-27T11:21:22+02:00",
    "input_file": {}
  },
  {
    "path": "posts/bls7/",
    "title": "BLS7",
    "description": "Diel foraging behaviour of Humboldt penguins *Spheniscus humboldti* at Tilgo Island, Northern Chile.",
    "author": [
      {
        "name": "Miriam Lerma",
        "url": {}
      }
    ],
    "date": "2021-09-23",
    "categories": [
      "Seabird",
      "presentation",
      "English"
    ],
    "contents": "\r\nIntro\r\nThis post is dedicated to the poster and presentation for the Bio-Logging Symposium (https://www.bls7hawaii.com)\r\nDiel foraging behaviour of Humboldt penguins Spheniscus humboldti at Tilgo Island, Northern Chile\r\n⚡⚡⚡⚡\r\n\r\n Preview poster\r\n\r\n⚡⚡⚡⚡\r\nAuthors\r\nMiriam Lerma1, Camila P. Villavicencio2, Nicolas Luna3, Matías Portflitt-Toro3, Juan Serratosa3,4, Guillermo Luna-Jorquera3, Stefan Garthe1, Rene Quispe5,6\r\nResearch and Technology Center (FTZ), University of Kiel, Hafentörn 1, 25761 Büsum, Germany. Link\r\nInstituto de Ecología y Biodiversidad, Departamento de Ciencias Ecológicas, Universidad de Chile, Las Palmeras 3425, Ñuñoa, Santiago, Chile. Link\r\nMillennium Nucleus for Ecology and Sustainable Management of Oceanic Islands - ESMOI, Larrondo 1281, Coquimbo, Chile. Link\r\nBirdLife International, The David Attenborough Building, Pembroke Street, Cambridge, CB2 3QZ, UK\r\nDepartamento de Biología Marina, Facultad de Ciencias del Mar, Universidad Católica del Norte, Larrondo 1281, Coquimbo, Chile. Link\r\nFacultad de Ciencias Agropecuarias, Universidad Pedro de Valdivia, Av. Cuatro Esquinas 60, La Serena, Chile\r\nReferences\r\nDe La Puente, S., Bussalleu, A., Cardeña, M., Valdés-Velásquez, A., Majluf, P. & Simeone, A. 2020. Humboldt Penguin (Spheniscus humboldti). Birds of the World 269–287. Link\r\nVianna, J. A. Cortes M., Ramos, B., Sallaberry, N., González-Acuña, D.,Dantas, G.P.M., Morgante, J., Simeone, A., Luna-Jorquera, G. Changes in abudance and distribution of Humboldt penguin Spheniscus humboldti. Mar. Ornithol. 42: 153-159. Link\r\nDantas, G.P.M., Oliveira, L.R., Santos, A.M., Flores, M.D., De Melo, D.R., Simeone, A., González-Acuña, D., Luna-Jorquera, G., Le Bohec, C., Valdés-Velásquez, A., Cardeña, M., Morgante, J.S. & Vianna, J.A. 2019. Uncovering population structure in the Humboldt penguin (Spheniscus humboldti) along the Pacific coast at South America. PLoS One 14: 1–19. Link\r\nQuispe, R., Lerma, M., Serratosa, J. & Luna-Jorquera, G. 2020. Foraging ranges of Humboldt penguins Spheniscus humboldti from Tilgo Island: the critical need for protecting a unique marine habitat. Mar. Ornithol. 48: 205–208. Link\r\nNavigation route of proposed industrial project at Tilgo Island by Oceana\r\nHerling, C., Culik, B.M. & Hennicke, J.C. 2005. Diet of the Humboldt penguin (Spheniscus humboldti) in northern and southern Chile. Mar. Biol. 147: 13–25. Link\r\nKaltenberg, A.M. & Benoit-Bird, K.J. 2009. Diel behavior of sardine and anchovy schools in the California Current System. Mar. Ecol. Prog. Ser. 394: 247–262. Link\r\nTaylor, J.C., Rand, P.S. & Jenkins, J. 2007. Swimming behavior of juvenile anchovies (Anchoa spp.) in an episodically hypoxic estuary: implications for individual energetics and trophic dynamics. Mar. Biol. 152: 939–957. Link\r\nHumboldt penguin call by Carlos Pinto xeno-canto\r\nAcknowledgments\r\nThis study was financed by Fondecyt (grant no. 3170936 to RQ and postdoctorate grant no. 3160679 to CPV) and by CONACyT-INAPI (grant no. 411876 to ML).\r\nWe thank Esther Rickert for the transportation of tracking devices, and Henri Kröling for useful discussions.\r\nThis study was carried out in accordance with the recommendations and permit of the Subsecretaria de Pesca y Acuicultura de Chile (resolution N°3367/2017).\r\n\r\n\r\n\r\n",
    "preview": "posts/bls7/Penguin2.jpg",
    "last_modified": "2021-10-29T11:45:04+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-07-05-GIScolores/",
    "title": "Colores en mapas",
    "description": "Cambiar colores en un en un mapa en ggplot2 y en QGIS.",
    "author": [
      {
        "name": "Miriam Lerma",
        "url": {}
      }
    ],
    "date": "2021-07-05",
    "categories": [
      "QGIS",
      "R",
      "spatial",
      "Español"
    ],
    "contents": "\r\n\r\nContents\r\nIntro\r\nMapa 🌎\r\nDescargar datos\r\nMapa base\r\nAgregar un sitio\r\nAgregar varios sitios\r\n\r\nQGIS 🗺️\r\n\r\nIntro\r\n\r\n\r\n\r\nEste post es acerca de como crear un mapa base de México, incluir puntos para sitios de muestreo y cambiar los colores de puntos en un mapa en ggplot y en QGIS.\r\nMapa 🌎\r\nPara crear y modificar mapas siguiendo las instrucciones de este post necesitamos los siguientes paquetes:\r\n\r\n\r\nlibrary(raster)\r\nlibrary(sf)\r\nlibrary(ggplot2)\r\nlibrary(ggspatial)\r\n\r\n\r\n\r\nSi no los tienes instalados usa la función install.packages()\r\nExisten shapefiles disponibles para México que se pueden descargar directamente en R.  - Para descargar los shapefiles, el paquete raster cuenta con la función getData. \r\nPara crear un mapa:  - El paquete sf es la que utilizaremos para el manejo de los shapefiles.  - El paqueteggplot2 es crear las visualizaciones. - El paquete ggspatial para agregar la escala.\r\nDescargar datos\r\nLo primero seria descargar los datos usando la función getData.  Una vez cargados los datos, podemos hacer una selección de los estados que nos interesen. \r\n\r\n\r\nMexico<- getData('GADM', country='Mexico', level=1) %>% st_as_sf()\r\nQueretaro <- Mexico[Mexico$NAME_1 == \"Querétaro\",]\r\nGuanajuato <- Mexico[Mexico$NAME_1 == \"Guanajuato\",]\r\n\r\n\r\n\r\nMapa base\r\nPara crear un mapa centrado en estos estados se puede usar el siguiente código:\r\n\r\n\r\nMapaBase<-ggplot()+\r\n  geom_sf(data= Mexico, fill='#264653', col='black')+\r\n  geom_sf(data= Queretaro, fill='#2a9d8f')+ #para resaltar estados\r\n  geom_sf(data= Guanajuato, fill='#2a9d8f')+ #para resaltar estados\r\n  \r\n  annotation_north_arrow(location=\"tr\",which_north=\"true\",style=north_arrow_fancy_orienteering ())+ #Norte\r\n  ggspatial::annotation_scale(location = \"bl\",bar_cols = c(\"grey60\", \"white\"))+ #Escala\r\n\r\n  theme_bw()+\r\n  coord_sf(xlim = c(-105,-95), #limites del mapa\r\n           ylim = c(18 ,24), #limites del mapa\r\n           expand = FALSE)\r\nMapaBase\r\n\r\n\r\n\r\n\r\nDentro de geom_sf el argumento fill es el color con el que se rellenaran los polígonos, lo puedes cambiar a como más te guste. En el mapa use códigos hexa-númericos que pueden ser encontrados en coolors, para más instrucciones ve aquí\r\nAgregar un sitio\r\nAhora para agregar sitios, se deben especificar las coordenadas. En el ejemplo el argumento geom_point x y y son las coordenadas. En color elegí el color que le quiero dar a ese punto y lo escribí como código hexa-númerico (hex).\r\n\r\n\r\nMapaSitios<-MapaBase+geom_point(aes(x=-100, y=21, \r\n                                    color='#e63946'))+ #elegir el color\r\n  theme(legend.position='none') #evitar la etiqueta\r\nMapaSitios\r\n\r\n\r\n\r\n\r\nAgregar varios sitios\r\nOtra opción es que si tienes muchos puntos, es más práctico crear o cargar un data frame.\r\n\r\n\r\nDatosInventados<-data.frame(long=c(-102,-101,-100,-99,-98),\r\n           lat=c(21.5,21.3,20.9,21,20))\r\n\r\n\r\n\r\nPuedes concatenar varios códigos hex y crear tu propia paleta\r\n\r\n\r\npaleta<-c(\"#f8ffe5\",\"#06d6a0\",\"#1b9aaa\",\"#ef476f\",\"#ffc43d\")\r\n\r\n\r\n\r\nAgregar la paleta a las especificaciones del gráfico es dentro de geom_point, en color. Para hacer los puntos más grandes también puedes agregar el argumento size en geom_point\r\n\r\n\r\nMapaSitios<-MapaBase+\r\n  geom_point(data=DatosInventados,aes(x=long, y=lat,color=paleta),size=3)+ \r\n  theme(legend.position='none') #evitar la etiqueta\r\nMapaSitios\r\n\r\n\r\n\r\n\r\nPara exportar el mapa, ve aquí\r\nQGIS 🗺️\r\nAhora, para cambiar colores en QGIS.\r\nPrimero asumiré que tienes cargados tus datos en QGIS. Una vez cargados los datos, elige la capa, y ve a propiedades o properties.\r\n\r\n\r\n\r\n\r\n\r\n\r\nAhora dale click en symbology. En la parte superior elige categorized, elige en value la columna de los nombres de los sitios o algo que los distinga entre si.\r\n\r\n\r\n\r\nDale enter al botón de classify. Dale Ok.\r\n\r\n\r\n\r\nAhora debes tener la opción de cambiar los colores de cada punto.\r\nDale click izquierdo y elige Edit symbol.\r\n\r\n\r\n\r\nAhora puedes darle doble click en el color y en la parte que dice html notation cambiarle el código hexagecimal por el que te interesa, puedes buscarlo en coolors.\r\n\r\n\r\n\r\nY listo!\r\n\r\n🥳\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-07-05-GIScolores/blog2.jpg",
    "last_modified": "2021-10-27T11:12:18+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-06-03-paquetes/",
    "title": "Paquetes",
    "description": "Como crear tu primer paquete con datos y algunas funciones.",
    "author": [
      {
        "name": "Miriam Lerma",
        "url": {}
      }
    ],
    "date": "2021-06-03",
    "categories": [
      "R",
      "funciones",
      "Español"
    ],
    "contents": "\r\n\r\nContents\r\nIntro\r\n1.1. Nombrar el paquete ✏️\r\n1.2. Iniciar un paquete 👩🏽‍🔧️\r\n1.3. Archivos 📄📂️\r\n1.4. Git & Github 🐱🐙\r\n1.4. devtools ⏳\r\n1.5. Licencia 📋\r\n1.6. metadata ☎️\r\n1.7. README 🏗️\r\n\r\n2. Datos 💾\r\n2.1. Documentar datos\r\n2.2. Resumido\r\n\r\n3. Funciónes 🤸🏾‍\r\n3.1. Función sin dependencias\r\n3.2. Funciones con dependencia\r\n3.3. Otros problemas 👻\r\n3.4. Resumido\r\n\r\nOtros\r\n4.1 Warnings ⚠️\r\n4.2. Crear tu propio sticker ❣️\r\n4.3. Zenodo 🔗\r\n\r\nCréditos y recursos 👩🏽‍🏫\r\n\r\nIntro\r\n\r\n\r\n\r\nPara crear un paquete principalmente hay que saber crear funciones.\r\nPero ¿Porque crear un paquete? 🤔\r\nAlgunas razones: \r\nRepito pasos y análisis con datos similares, hasta ahora re-uso funciones de scripts anteriores. \r\nEstudiantes y colegas me preguntan como realizar análisis similares, pero no están familiarizados con la sintaxis de las funciones \r\nLos artículos me piden más detalles de como se realizaron los análisis y el espacio es limitado para dar detalles.\r\nAunque existan paquetes similares no cubren todos los pasos, sirven de inspiración pero no resuelven el problema.\r\n1.1. Nombrar el paquete ✏️\r\nPara crear paquetes se puede usar el paquete usethis\r\n\r\n\r\n#install.packages('usethis')\r\nlibrary(usethis)\r\n\r\n\r\n\r\nAntes de iniciar a crear un paquete, se puede consultar si el nombre no esta siendo usando en otro paquete en la página CRAN. También existe el paquete available para revisar si el paquete ya existe en CRAN o en github y si el nombre del paquete puede ser ofensivo.\r\n\r\n\r\ninstall.packages('available')\r\nlibrary(available)\r\navailable(\"nombre_paquete\")\r\n\r\n\r\n\r\nTe va preguntar si quieres que revise por contenido ofensivo, puedes poner Y.\r\n\r\nUrban Dictionary can contain potentially offensive results,\r\n  should they be included? [Y]es / [N]o:\r\n\r\nDespués abre paginas para mostrar que significa el nombre de el paquete.\r\n1.2. Iniciar un paquete 👩🏽‍🔧️\r\nPara crear un paquete la función create_package crea el esqueleto de los paquetes.  Dentro puedes poner el nombre del paquete que te interesa crear.\r\n\r\n\r\nusethis::create_package(\"nombre_paquete\")\r\n\r\n\r\n\r\nAparecerá algo así:\r\n\r\n√ Creating 'nombre_paquete/'\r\n√ Setting active project to '...'\r\n√ Creating 'R/'\r\n√ Writing 'DESCRIPTION'\r\nPackage: nombre_paquete\r\nTitle: What the Package Does (One Line, Title Case)\r\nVersion: 0.0.0.9000\r\nAuthors@R (parsed):\r\n    * First Last <first.last@example.com> [aut, cre] (YOUR-ORCID-ID)\r\nDescription: What the package does (one paragraph).\r\nLicense: `use_mit_license()`, `use_gpl3_license()` or friends to\r\n    pick a license\r\nEncoding: UTF-8\r\nLazyData: true\r\nRoxygen: list(markdown = TRUE)\r\nRoxygenNote: 7.1.1\r\n√ Writing 'NAMESPACE'\r\n√ Writing 'nombre_paquete.Rproj'\r\n√ Adding '^nombre_paquete\\\\.Rproj$' to '.Rbuildignore'\r\n√ Adding '.Rproj.user' to '.gitignore'\r\n√ Adding '^\\\\.Rproj\\\\.user$' to '.Rbuildignore'\r\n√ Opening '...' in new RStudio session\r\n√ Setting active project to '<no active project>'\r\n\r\nNota: Si te encuentras dentro de un proyecto va a preguntar si deseas sobregrabar el proyecto existente. Si es el caso: 2: Absolutely\r\n\r\nv Writing 'NAMESPACE'\r\nOverwrite pre-existing file 'nombre_paquete.Rproj'?\r\n\r\n1: Not now\r\n2: Absolutely\r\n3: No way\r\n\r\nAparecerá algo como:\r\n\r\nv Writing 'nombre_paquete.Rproj'\r\nv Adding '^nombre_paquete\\\\.Rproj$' to '.Rbuildignore'\r\nv Adding '^\\\\.Rproj\\\\.user$' to '.Rbuildignore'\r\nv Opening '...' in new RStudio session\r\nv Setting active project to '<no active project>'\r\n\r\nSe abrirá el proyecto en otra ventana.\r\n1.3. Archivos 📄📂️\r\nLa función anterior creó los archivos:\r\n- .gitignore  - .Rbuildignore - DESCRIPTION - NAMESPACE - README.md\r\nLas Carpetas: - R\r\n1.4. Git & Github 🐱🐙\r\nSi ya tienes instalado git puedes directamente conectar el paquete con tu repositorio, escribiendo en tu consola:\r\n\r\n\r\nusethis::use_git()\r\n\r\n\r\n\r\nAparecerá algo como:\r\n\r\n√ Setting active project to '...'\r\n√ Adding '.Rdata', '.httr-oauth', '.DS_Store' to '.gitignore'\r\nThere are 6 uncommitted files:\r\n '.gitignore'\r\n '.Rbuildignore'\r\n 'DESCRIPTION'\r\n 'NAMESPACE'\r\nIs it ok to commit them?\r\n\r\n1: Absolutely not\r\n2: Yup\r\n3: Negative\r\n\r\n3: Yup… es si\r\nAparecerá algo como:\r\n\r\n√ Adding files\r\n√ Making a commit with message 'Initial commit\r\n A restart of RStudio is required to activate the Git pane\r\nRestart now?\r\n1: Yup\r\n2: No\r\n3: Not now\r\n\r\nSi deseas reiniciar RStudio para activar git:\r\n1: Yup… es sip\r\nSe reiniciara la sesión\r\nPara ahora conectarlo con github, hay que escribir en la consola:\r\n\r\n\r\nusethis::use_github()\r\n\r\n\r\n\r\nAparecerá algo como:\r\n\r\ni Defaulting to https Git protocol\r\n√ Setting active project to 'C:/...'\r\n√ Checking that current branch is default branch ('master')\r\n√ Creating GitHub repository '...'\r\n√ Setting remote 'origin' to 'https://github.com/...git'\r\n√ Setting URL field in DESCRIPTION to 'https://github.com/...'\r\n√ Setting BugReports field in DESCRIPTION to 'https://github.com/...'\r\nThere is 1 uncommitted file:\r\n 'DESCRIPTION'\r\nIs it ok to commit it?\r\n1: No\r\n2: No way\r\n3: I agree\r\n\r\nSi es correcto elegir 3: I agree, que significa de acuerdo\r\nAparecerá algo como:\r\n\r\n√ Adding files\r\n√ Making a commit with message 'Add GitHub links to DESCRIPTION'\r\n√ Pushing 'master' branch to GitHub and setting 'origin/master' as upstream branch\r\n√ Opening URL 'https://github.com/...'\r\n\r\nAbrirá github\r\n1.4. devtools ⏳\r\nEscribir en la consola\r\n\r\n\r\ndevtools::check()\r\n\r\n\r\n\r\nEsta función revisa la versión, plataforma, sesiones y demás.\r\nTarda un poquito.\r\n\r\n0 errors √ | 1 warning x | 0 notes √\r\n\r\nEl warning ocurre porque hay que darle una licencia al paquete.\r\n\r\nNon-standard license specification:\r\n    `use_mit_license()`, `use_gpl3_license()` or friends to pick a\r\n    license\r\n  Standardizable: FALSE\r\n\r\n1.5. Licencia 📋\r\nPara software la licencia más común es MIT\r\n\r\n\r\nusethis::use_mit_license(\"Mi Nombre\")\r\n\r\n\r\n\r\nAparecerá algo como:\r\n\r\n√ Setting License field in DESCRIPTION to 'MIT + file LICENSE'\r\n√ Writing 'LICENSE'\r\n√ Writing 'LICENSE.md'\r\n√ Adding '^LICENSE\\\\.md$' to '.Rbuildignore'\r\n\r\nPara revisar si funcionó:\r\n\r\n\r\ndevtools::check()\r\n\r\n\r\n\r\nTarda un poquito.\r\n\r\n0 errors √ | 0 warning √ | 0 notes √\r\n\r\n1.6. metadata ☎️\r\nPara agregar metadata se debe abrir y modificar el documento que dice DESCRIPTION, agregando tus datos.\r\nEsta es la información de contacto si hay problemas con el paquete.\r\n\r\n\r\nAuthors@R:\r\n  person(given = \"Miriam\",\r\n         family = \"Lerma\",\r\n         role = c(\"aut\", \"cre\"),\r\n         email = \"miriamjlerma@gmail.com\",\r\n         comment = c(ORCID = \"0000-0002-7632-9289\"))\r\n\r\n\r\n\r\n1.7. README 🏗️\r\nPara crear un nuevo README, el paquete usethis tiene una función para crearlo de manera automática,\r\n\r\n\r\nlibrary(usethis)\r\nuse_readme_rmd(open = rlang::is_interactive())\r\n\r\n\r\n\r\n\r\n√ Setting active project to '...'\r\n√ Writing 'README.Rmd'\r\n√ Adding '^README\\\\.Rmd$' to '.Rbuildignore'\r\n Modify 'README.Rmd'\r\n√ Writing '.git/hooks/pre-commit'\r\n\r\n2. Datos 💾\r\nPara agregar datos en tu paquete, puedes cargar tus datos y después guardarlos dentro de tu proyecto. \r\n\r\n\r\n\r\nPor convención los datos son colocados en una carpeta que lleve el nombre de data dentro del paquete.  Puedes crear esta carpeta desde RStudio abriendo la pestaña de Files y eligiendo New Folder. \r\nPara comprimir datos pesados puedes guardarlos como .rda.\r\n\r\n\r\nsave(TDR_raw, file=\"TDR_raw.rda\")\r\n\r\n\r\n\r\nPara revisar el peso de los datos puedes usar:\r\n\r\n\r\nobject.size(TDR_raw)\r\n\r\n\r\n\r\n\r\n\r\npryr::mem_used()\r\n\r\n\r\n\r\n2.1. Documentar datos\r\nPara documentar tus datos, puedes abrir un nuevo script (File>NewFile>R Script) o usar la función del paquete usethis.\r\nTanto la función use_r como use_data funcionan.\r\n\r\n\r\nusethis::use_r(\"mis_datos\")\r\nusethis::use_data(\"mis_datos\")\r\n\r\n\r\n\r\nEsta función agrega comentarios Roxigen y guarda el documento en tu folder llamado R.  En mi caso yo le di al script el mismo nombre que a los datos.\r\n\r\n\r\n#' Mis datos son datos de...\r\n#' Contiene 264197 obs de 1 variable.\r\n#' @docType data\r\n#' @usage data(mis_datos)\r\n#' @format Un data frame con 1 variable\r\n#' @keywords datasets\r\n#' @references Lerma et al. 2021\r\n#' @examples\r\n#' data(mis_datos)\r\n\"mis_datos\"\r\n\r\n\r\n\r\nUna vez creado el archivo .rda y .R se puede revisar si funcionó usando funciones del paquete devtools\r\n\r\n\r\ndevtools::check()\r\n\r\n\r\n\r\nSi los datos son muy pesados y te aparece un mensaje como este:\r\n\r\nNote: significantly better compression could be obtained\r\n          by using R CMD build --resave-data\r\n\r\nEs mejor agregar el argumento compress.\r\n\r\n\r\nsave(TDR_raw, file=\"TDR_raw.rda\", compress = \"xz\")\r\n\r\n\r\n\r\n2.2. Resumido\r\nAgrega datos al paquete\r\n\r\n\r\nsave(mis_datos, file=\"mis_datos.rda\")\r\n\r\n# Tu objeto, tu documento rda y tu R deben tener el mismo nombre. \r\n\r\nusethis::use_r(\"mis_datos\")\r\n\r\n#Insertar Roxigen Skeleton  (CTRL+ALT+SHIFT+R) o copiar y pegar de otro archivo\r\n\r\ndevtools::document()\r\n\r\ndevtools::check()\r\n\r\n\r\n\r\nSi después de usar devtools::check(), aparece:\r\n\r\n0 errors √ | 0 warnings √ | 0 notes √\r\n\r\nYa tienes tu primer paquete con datos 🥳.\r\nPara instalar el paquete de manera local\r\n\r\n\r\ndevtools::install(\"C:/....\")\r\n\r\n\r\n\r\nPara instalar el paquete desde github\r\n\r\n\r\ndevtools::install_github(\"Desarrollador/paquete\")\r\n\r\n\r\n\r\n3. Funciónes 🤸🏾‍\r\nPara este paso deberías tener alguna función en mente.\r\nSi aún no sabes como crear tu primera función puedes ir a r4ds.\r\nLa estructura es algo así:\r\n\r\n\r\nnombre_de_la_funcion<-function(argumentos){\r\n  algo_que_haga_la_funcion_usando(argumentos)\r\n  return(resultado)\r\n}\r\n\r\n\r\n\r\n3.1. Función sin dependencias\r\nPara agregar la función al paquete.\r\n\r\n\r\nusethis::use_r(\"mi_primera_funcion\")\r\n\r\n\r\n\r\nAbre un nuevo script\r\nPega allí la función\r\nAparecerá algo como:\r\n\r\n√ Setting active project to 'C:/...'\r\n Modify 'R/mi_primera_funcion.R'\r\n Call `use_test()` to create a matching test file\r\n\r\nAhora en la carpeta R aparecerá dentro la función\r\nAgregar un Roxigen skeleton:  - Poner el cursor justo en la primera linea de la función.  - Abrir la pestaña de Code>Insert Reoxygen Skeleton (también funciona con Control+Alt+Shift+R). \r\nAparecerá algo como:\r\n\r\n\r\n#' Title\r\n#'\r\n#' @param data \r\n#' @param trip_start \r\n#' @param trip_end \r\n#'\r\n#' @return\r\n#' @export\r\n#'\r\n#' @examples\r\n\r\n\r\n\r\nDespués de rellenar la información necesaria, para agregar la función al paquete, escribe en la consola:\r\n\r\n\r\ndevtools::document()\r\n\r\n\r\n\r\nAparecerá algo como:\r\n\r\nWriting NAMESPACE\r\nWriting mi_primera_funcion.Rd\r\n\r\nAl abrir la carpeta man aparecerá un documento rellenado.\r\nEl nombre man viene de manual y esta es la documentación del paquete.\r\nNo debe ser editado de manera manual.\r\nYa puedes revisar la documentación.\r\n\r\n\r\n?mi_primera_funcion\r\n\r\n\r\n\r\n\r\n\r\ndevtools::check()\r\n\r\n\r\n\r\n3.2. Funciones con dependencia\r\nTe recomiendo probar tu función con datos de ejemplo, antes de incluirla en el paquete.\r\nRevisa que paquetes son requeridos, por ejemplo: tidyr\r\n\r\n\r\n\r\nDefine los argumentos por separado como objeto.\r\n\r\n\r\ndata=misdatos\r\nmi_primer_argumento='mi_primer_argumento'\r\nmi_segundo_argumento='mi_segundo_argumento'\r\n\r\n\r\n\r\nPrueba la función\r\n\r\n\r\nmi_funcion(data = mis_datos,\r\n           mi_primer_argumento='mi_primer_argumento',\r\n           mi_segundo_argumento='mi_segundo_argumento')\r\n\r\n\r\n\r\nOtra opción es usar el paquete ‘testthat’ para probar tu función.\r\nPara agregar la función al paquete:\r\n\r\n\r\nusethis::use_r(\"tu_funcion\")\r\n\r\n\r\n\r\nAbre un nuevo script. Pega allí la función. En la consola aparecerá algo como:\r\n\r\n Modify 'R/tu_funcion.R'\r\n Call `use_test()` to create a matching test file\r\n\r\nAhora en la carpeta R dentro del paquete aparece la función.Nota sugiere que uses use_test pero puede en conflicto con el siguiente paso.\r\nPuedes usar /rm() para quitar tu función.\r\nPara poner la función en la memoria local y confirmar que se ejecute hay que incluirla en el paquete y probarla.\r\n\r\n\r\ndevtools::load_all()\r\n\r\n\r\n\r\nPara documentar la función hay que crear un Roxigen skeleton.\r\nPara esto se debe poner el cursor justo en la primera linea de la función.\r\nDespués ir a la pestaña de Code>Insert Reoxygen Skeleton (tambíen funciona con Control+Alt+Shift+R).\r\nVa a aparecer algo así:\r\n\r\n\r\n#' Title\r\n#'\r\n#' @param data \r\n#' @param mi_primer_argumento \r\n#' @param mi_segundo_argumento \r\n#'\r\n#' @return\r\n#' @export\r\n#'\r\n#' @examples\r\n\r\n\r\n\r\nNota que identifica de manera automática las variables de la función\r\nAhora que ya esta la función y la documentación para agregar el paquete hay que escribir en la consola:\r\n\r\n\r\ndevtools::document()\r\n\r\n\r\n\r\nAparece:\r\n\r\nWriting NAMESPACE\r\nWriting mi_funcion.Rd\r\n\r\nAhora en la carpeta man, aparece un documento rellenado.man viene de manual y esta es la documentación del paquete.\r\nNota No debe ser editado de manera manual.\r\nPuedes revisar la documentación de la función.\r\n\r\n\r\n?mi_funcion\r\n\r\n\r\n\r\nDependencias son paquetes necesarios para que la función, funcione.\r\nPara revisar si necesitas dependencias se puede usar:\r\n\r\n\r\ndevtools::check()\r\n\r\n\r\n\r\nSi tu paquete tiene dependencias, aparecerán errores, warnings y notas.\r\nPor ejemplo, un paquete que usa: - un %>% (pipe) depende del paquete magrittr, y - la función separate depende del paquete dplyr.\r\nPara agregar las dependencias se puede escribir el nombre de los paquetes dentro de la función use_package\r\n\r\n\r\nusethis::use_package(\"dplyr\")\r\n\r\n\r\n\r\nAparecerá algo como:\r\n\r\n√ Adding 'dplyr' to Imports field in DESCRIPTION\r\n Refer to functions with `dplyr::fun()`\r\n\r\nAsí mismo aparecerá en el documento DESCRIPTION:\r\n\r\n\r\nImports: \r\n    dplyr\r\n\r\n\r\n\r\nLo siguiente es especificar el paquete en la función, tal como recomienda el siguiente mensaje.\r\n\r\n Refer to functions with `dplyr::fun()`\r\n\r\npipe 🖇️\r\nLa función pipe (%>%) del paquete magrittr es especial.\r\nPor lo que hay que usar:\r\n\r\n\r\nusethis::use_pipe()\r\n\r\n\r\n\r\nAparecerá algo como:\r\n\r\n√ Adding 'magrittr' to Imports field in DESCRIPTION\r\n√ Writing 'R/utils-pipe.R'\r\n Run `devtools::document()` to update 'NAMESPACE'\r\n\r\nSe recomienda volver a documentar.\r\n\r\n\r\ndevtools::document()\r\n\r\n\r\n\r\nAhora deberá aparecer en la carpeta R un script llamado utils-pipe.R y\r\nen el archivo DESCRIPTION deberá aparecer Imports magrittr\r\nPara checar el paquete:\r\n\r\n\r\ndevtools::check()\r\n\r\n\r\n\r\n\r\n0 errors √ | 0 warnings √ | 0 notes √\r\n\r\nListo! el paquete esta completo 🥳\r\nstats 🧮\r\nCuando queremos agregar alguna función que incluya cálculos de desviación estándar, aunque no se necesite cargar el paquete en RStudio, la función proviene de un paquete.\r\nEl paquete es stats\r\nPor lo tanto el paquete stats debe ser incluido en las dependencias.\r\n\r\n\r\nusethis::use_package(\"stats\")\r\n\r\n\r\n\r\nY agregado a la función.\r\n\r\n\r\nresultado<- data %>%\r\n    dplyr::summarise(max_depth_mean=mean(.data[[var1]]),\r\n                     max_depth_sd=stats::sd(.data[[var1]]),\r\n                     max_depth_max=max(.data[[var1]]))\r\n\r\n\r\n\r\n\r\n\r\ndevtools::document()\r\ndevtools::check()\r\n\r\n\r\n\r\n\r\n\r\ndevtools::check()\r\n\r\n\r\n\r\n\r\n0 errors √ | 0 warnings √ | 0 notes √\r\n\r\nListo! el paquete esta completo 🥳\r\nggplot 🎨\r\nCuando creamos una función con ggplot hay que declarar el uso de la función en varios argumentos de la función. Aquí puedes leer más.\r\nSi no, aparecerá un error:\r\n\r\n1 error x | 0 warnings √ | 1 note x\r\n\r\nEsto occurre debido a que al revisar el paquete, no detecta varias funciones del paquete ggplot.\r\n\r\nno visible global function definition for 'aes'\r\n\r\nEjemplo:\r\n\r\n\r\nggplot2::ggplot(data=data,ggplot2::aes(x=.data[[var1]],\r\n                              y=as.numeric(.data[[var2]])))+\r\n    ggplot2::geom_line()+\r\n    ggplot2::ylab(\"Diving depth (m)\")+\r\n    ggplot2::xlab(\"Month.Day Hour:Minute\")+\r\n    ggplot2::scale_y_reverse()+\r\n    ggplot2::theme_bw()\r\n\r\n\r\n\r\n\r\nchecking R code for possible problems ...\r\n\r\nTambién pueden aparecer problemas con las variables al usar ggplot dentro de una función.\r\n\r\nno visible binding for global variable '.data'\r\n\r\nPara resolver esto hay que declarar las variables dentro de la función y posteriormente usar .data\r\n\r\ndata<-TDR_trip\r\nvar1<-time_column\r\nvar2<-depth_column\r\n  \r\nggplot2::ggplot(data,\r\n                ggplot2::aes(x=.data[[var1]],\r\n                             y=.data[[var2]))+\r\n    ggplot2::geom_line()\r\n\r\n\r\n\r\ndevtools::document()\r\ndevtools::check()\r\n\r\n\r\n\r\n\r\n\r\ndevtools::check()\r\n\r\n\r\n\r\n\r\n0 errors √ | 0 warnings √ | 0 notes √\r\n\r\nListo! el paquete esta completo 🥳\r\n3.3. Otros problemas 👻\r\nProblema En algunas funciones puedes haber usado assign. Usar assign no es recomendado, por lo que aparecerá una nota. Solución Usar return().\r\nProblema No nested functions, no circular dependencies. Solución No puedes usar funciones de tu paquete en otras funciones del mismo paquete. \r\nProblema Borrar funciones.Solución Para borrar funciones se debe borrar el script en el archivo R y volver a documentar el paquete para que se reflejen los cambios.\r\nProblema El ejemplo tiene más de 100 caracteres, es considerado muy largo. Solución Separar en la documentación.\r\n\r\n\\examples lines wider than 100 characters:\r\n\r\nProblema Solo puedo tener un resultado (return) Solución Crea una lista con los returns. Por ejemplo:\r\n\r\nfuncion(primer_argumento, segundo_argumento){\r\n  multiplicacion<-primer_argumento*segundo_argumento\r\n  suma<-primer_argumento+segundo_argumento\r\n  lista<-(list(\"multiplicacion\"=multiplicacion,\"suma\"=suma))\r\n  return(lista)\r\n}\r\n\r\nProblema Al usar slot en sapply.Solución Hay que agregar la dependencia methods.\r\n3.4. Resumido\r\n\r\n\r\nusethis::use_r(\"nombre_funcion\")\r\n\r\n#Insertar Roxigen Skeleton  (CTRL+ALT+SHIFT+R)\r\n\r\ndevtools::document()\r\n\r\ndevtools::check()\r\n\r\nusethis::use_package(\"ggplot2\")\r\n\r\n#Referirse a funciones con ::\r\n\r\ndevtools::check()\r\n\r\n\r\n\r\nOtros\r\n4.1 Warnings ⚠️\r\nEs útil agregar warnings para que el usuario (quien sera a veces tu mismo) pueda corregir errores.\r\nPara checar que el data frame contenga datos, revisa que el numero de filas no sea cero.\r\n\r\n\r\n if (nrow(data)!=0){\r\n  } else {\r\n    warning(\"Please check the name of the data frame\")\r\n  }\r\n\r\n\r\n\r\nTambién puedes revisar si tu data frame contiene una columna de acuerdo a su nombre\r\n\r\n\r\nif (\"Nombre_columna\" %in% colnames(data)){\r\n  } else {\r\n    warning(\"Please check that your data frame has X column, otherwise please rename/create the column\")\r\n  }\r\n\r\n\r\n\r\nAdemas podemos revisar si una columna en especifico aparece en el data frame\r\n\r\n\r\nif (!is.null(data[[columna]])) {\r\n  } else {\r\n    warning(\"The column X is not in your dataframe. Please check the name of the column\")\r\n  }\r\n\r\n\r\n\r\n️\r\n4.2. Crear tu propio sticker ❣️\r\nPara crear un hexSticker puedes usar plantillas:  - En powerpoint plantilla hecha por Emi Tanaka  - En R paquete hexSticker hecho por GuangchuangYu\r\nPara instalar el paquete hexSticker, puedes descargarlo desde en CRAN:\r\n\r\n\r\ninstall.packages(\"hexSticker\")\r\n\r\n\r\n\r\n4.3. Zenodo 🔗\r\nZenodo es un repositorio de acceso abierto operado por CERN (Organización Europea para la Investigación Nuclear).\r\nVentajas Permite que se depositen allí artículos de investigación, datos, software, informes y otro tipo de objeto digital relacionado con la investigación. La ventaja frente a github es que asigna un DOI.\r\nDesventajas Las versiones de paquetes se pueden registrar en zenodo. No obstante, NO es tan practico ya que cada versión tiene su propio DOI y la versión anterior no puede ser eliminada.\r\nCréditos y recursos 👩🏽‍🏫\r\nPaquetes usethis testthat\r\nLibros R Packages\r\nTutoriales sobre datos  Incluir datos  Documentar datos \r\nTu paquete en una hora  Piping hot data\r\nVideos Rladies como crear funciones Rladies como crear paquetes\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-06-03-paquetes/blog3.jpg",
    "last_modified": "2021-10-27T11:16:54+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-06-03-vitae/",
    "title": "CV",
    "description": "Como crear un curriculo en RStudio usando el paquete vitae.",
    "author": [
      {
        "name": "Miriam Lerma",
        "url": {}
      }
    ],
    "date": "2021-06-02",
    "categories": [
      "R",
      "funciones",
      "Español"
    ],
    "contents": "\r\n\r\nContents\r\nIntro\r\nDescargar el paquete 🕯️\r\nIniciar con una plantilla 🧶\r\nTus datos 💾\r\nPartes de tu CV 💭\r\nAgregar tu información ✏️\r\nTus publicaciones 👩🏽‍🔬\r\nHabilidades 🤸🏽‍️\r\nColores de las letras 👩🏾‍🎨\r\nResumiendo ✔️\r\nCréditos y recursos 👩🏾‍🏫\r\n\r\nIntro\r\nPara crear un CV en RStudio, básicamente necesitas saber Rmd.\r\nPara los básicos de Rmd te recomiendo ir aquí.\r\nSi quieres ver como quedo mi cv, puedes descargarlo aquí.\r\nDescargar el paquete 🕯️\r\nPara crear tu CV puedes descargar el paquete vitae desde github.\r\n\r\n\r\n# install.packages(\"devtools\")\r\ndevtools::install_github(\"mitchelloharawild/vitae\")\r\n\r\n\r\n\r\nPara ver detalles ésta es la página.\r\nNota Al instalar el paquete se tarda descargando actualizaciones.\r\nIniciar con una plantilla 🧶\r\nFile>NewFile>R Markdown>From template\r\nPara elegir la plantilla (template), en la página puedes ver algunos ejemplos.\r\nPero si no te decides, se puede modificar en el output del YAML después.\r\nAl elegir tu plantilla, se abrirá un nuevo Rmd. Antes de empezar a rellenar tu CV, te recomiendo probar tener todos las dependencias instaladas. Para esto, dale en knit.\r\nTal vez tengas que instalar de nuevo tinytext.\r\n\r\nError: LaTeX failed to compile Untitled.tex. \r\nSee https://yihui.org/tinytex/r/#debugging for debugging tips.\r\n\r\nPara instalarlo:\r\n\r\n\r\ntinytex::install_tinytex()\r\n\r\n\r\n\r\nTus datos 💾\r\nLa información que incluyas en el YAML aparecerá en la parte superior de tu CV.\r\nLa plantilla te da un archivo prellenado, que debes modificar de acuerdo a tus datos.\r\n\r\n---\r\nname: Marie\r\nsurname: Curie\r\nposition: \"Professor\"\r\naddress: \"School of Physics & Chemistry, École Normale Supérieure\"\r\nphone: +1 22 3333 4444\r\nwww: mariecurie.com\r\nemail: \"Marie.Curie@ens.fr\"\r\ntwitter: mariecurie\r\ngithub: mariecurie\r\nlinkedin: mariecurie\r\ndate: \"`r format(Sys.time(), '%B %Y')`\"\r\noutput: \r\n  vitae::latexcv:\r\n    theme: classic\r\n---\r\n\r\nSi al darle knit te esta causando muchos problemas con LaTex, te recomiendo cambiar el output a awesomecv y poner keep_tex en false.\r\n\r\n\r\noutput: \r\n  vitae::awesomecv:\r\n    keep_tex: false\r\n\r\n\r\n\r\nPartes de tu CV 💭\r\nDepende para que sea tu CV puedes estructurarlo de manera diferente.\r\nSi quieres un CV académico te puedes basar en la estructura del CV de Han Zhang.\r\nEste CV contiene\r\n- Research interest\r\n- Education\r\n- Peer-reviewed Publications\r\nAgregar tu información ✏️\r\nPara agregar las partes a tu CV, la información se maneja como tribble\r\nUnas de las funciones de vitae es detailed_entries, que es como sera mostrada la información en tu pdf, otra opción es brief_entries que presenta un formato más compacto.\r\nPara llenar un tribble:\r\n\r\n\r\ntribble(\r\n  ~Year, ~Type, ~Desc,\r\n  \"2021-current\", \"Postdoc\", \"Universidad de Kiel\",\r\n  \"2020-2021\",\"Postdoc\",\"Universidad de Kiel\"\r\n) %>% \r\n  detailed_entries(\r\n    glue::glue(\"Trabajos {Type}\"),\r\n    Year, \r\n    Desc\r\n  )\r\n\r\n\r\n\r\nTus publicaciones 👩🏽‍🔬\r\nPara agregar publicaciones puedes el archivo .bib con tus datos. Si quieres aprender como extraer las citas, te recomiendo mirar aquí\r\n\r\n\r\nlibrary(dplyr)\r\nknitr::write_bib(c(\"vitae\", \"tibble\"), \"papers.bib\")\r\n\r\nbibliography_entries(\"papers.bib\") %>%\r\n  arrange(desc(author$family), issued)\r\n\r\n\r\n\r\nNo obstante, si tus publicaciones incluyen acentos y letras cursivas. Entonces puede ser más practico usar tribble y detailed_entries.\r\nPara agregar letras negritas o cursivas la sintaxis es:\r\n\r\n\\\\textit{} #italicas\r\n\\\\textbf{} #negritas\r\n\r\nEjemplo:\r\n\r\n\r\ntribble(\r\n ~ Year, ~ Place, ~ Project, ~ Position,\r\n\r\n \"2020\",\r\n  \"\\\\textbf{Lerma, M}, Serratosa J, Luna-Jorquera G, Garthe S\",\r\n  \"Foraging ecology of masked boobies \\\\textit{(Sula dactylatra)} in the world’s largest ‘oceanic desert’\",\r\n  \"Mar Biol 167: 87\"\r\n \r\n ) %>% \r\n  detailed_entries(Place, \r\n                   Position,\r\n                   Project, \r\n                   Year,\r\n                   .protect = FALSE)\r\n\r\n\r\n\r\nEs importante poner protect en FALSE para que aparezcan los cambios.\r\nHabilidades 🤸🏽‍️\r\nPara incluir tus habilidades puede que no quieras tener una lista con mucho espacio vacío. Una opción para evitar esto es crear una tabla parecida a la que aparece en el CV de Lorena Abad.\r\n\r\n\r\nSkills<-tribble(\r\n   ~Computer, ~Laboratory, ~Fieldwork,~ Languages,\r\n  \"R -- Statistica -- SPSS -- Sigmaplot -- QGIS -- Git -- Markdown\",\r\n  \"Heavy metal analyses -- Stable isotopes -- Plasma metabolites analyses\",\r\n  \"Catching and handling wild animals -- Sample collection: extraction blood & feathers -- Censing populations -- Monitoring breeding success\",\r\n  \"Spanish (Mother tongue) -- English (TOEFL iBT 99) -- German (Basic-A2)\"\r\n)\r\n\r\n\r\n\r\n\r\n\r\nSkills %>%\r\n  kbl(booktabs = T, align =\"c\",format = \"latex\") %>% #crea tabla y alinea al centro\r\n  column_spec(column = 1:4, width = '4cm')%>%        #separa las columnas en 4 y las hace de 4 cm\r\n  row_spec(0, bold = T, color = \"#009acd\") %>%       #hace las letras en negrita y cambia el color\r\n  row_spec(1, bold = F, color = \"#7f7f7f\")           #cambia el color del texto a gris\r\n\r\n\r\n\r\nPara que no aparezcan las lineas en la tabla, se puede agregar en el YAML:\r\n\r\n  \\usepackage{colortbl}\r\n  \\arrayrulecolor{white}\r\n\r\nColores de las letras 👩🏾‍🎨\r\nPara cambiar el color del texto se puede ajustar en el YAML.\r\n\r\nheadcolor: 009ACD\r\n\r\nResumiendo ✔️\r\nvitae es una buena opción para crear tu CV y solo se tiene que hacer la estructura una vez, que además resulta mas atractiva a la vista. No obstante puede traer muchos errores por LaTex.\r\nCréditos y recursos 👩🏾‍🏫\r\n\r\n\r\n\r\nEjemplos LorenaAbad Han Zhang Galería\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-06-03-vitae/blog4.jpg",
    "last_modified": "2021-10-27T11:15:14+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-06-03-paginadistill/",
    "title": "Pagina distill",
    "description": "Como crear tu propia pagina y agregar contenidos.",
    "author": [
      {
        "name": "Miriam Lerma",
        "url": {}
      }
    ],
    "date": "2021-06-01",
    "categories": [
      "R",
      "funciones",
      "Español"
    ],
    "contents": "\r\n\r\nContents\r\nCrear un sitio 👩🏽‍💻\r\nBarra de navegación ⛵\r\nCrear un post 📬\r\nEscribir en el post ✏️\r\nAgregar código 👩🏽‍💻\r\nCSS 👩🏽‍🎨\r\nCitas 🌹\r\nAgregar botones 🛎️\r\nBuild 🔨\r\nDe Rstudio a online 👩🏽‍🚀\r\nCréditos y recursos 🚀\r\n\r\n\r\nCrear un sitio 👩🏽‍💻\r\n\r\n\r\n\r\nPara crear una pagina web usando distill, básicamente necesitas saber Rmd.\r\nEmpecemos por instalar el paquete distill.\r\n\r\n\r\n#install.packages(\"distill\")\r\nlibrary(distill)\r\n\r\n\r\n\r\nTienes que preguntarte: ¿Que tipo de página quieres hacer? ¿Sitio web o blog?\r\nPara cualquiera de las opciones puedes ir a File>New Project> Distill Website o Distill Blog\r\nVer otros detalles\r\nLa estructura del sitio contiene varios archivos\r\nLa configuración del sitio: site.yml\r\nLa primera página que se abre cuando entras: index.Rmd\r\nOtros Rmd donde puedes escribir sobre tí. Ej. about.Rmd\r\nBarra de navegación ⛵\r\nPara modificar la barra de navegación, abre el archivo site.yml  Puedes elegir donde quieres que aparezcan los contenidos. Ej. al elegir left aparecerán a la izquierda.\r\nPara agregar pestañas agrega text y href. Pon atención a los espacios vacios. \r\n\r\nnavbar:\r\n  left: \r\n    - text: \"Home\"\r\n      href: index.html\r\n    - text: \"Projects\" \r\n      href: projects.html\r\n    - icon: fab fa-twitter\r\n      href: https://twitter.com/MiriamLermaL\r\n    - icon: fab fa-github\r\n      href: https://github.com/MiriamLL\r\n\r\nCrear un post 📬\r\nUsa la función create_post y escribe dentro el nombre que quieras darle a tu post.\r\n\r\n\r\nlibrary(distill)\r\ncreate_post(\"Nombre de tu post\")\r\n\r\n\r\n\r\nAparecerá algo como:\r\n\r\nv Created post at _posts/2021-05-14-Nombre de tu post\r\n\r\nY te abrirá un nuevo Rmd.\r\nVer Uwe’s blog para otros detalles\r\nEscribir en el post ✏️\r\nPuedes abrir el Rmd que creaste usando la función create_post y escribir como en cualquier Rmd.\r\nLa información en el yaml aparecerá en el indice de la pestaña.\r\n\r\n---\r\ntitle: \"sula\"\r\ndescription: |\r\n  A short description of the post.\r\nauthor:\r\n  - name: Miriam Lerma\r\n    url: {}\r\ndate: 05-14-2021\r\noutput:\r\n  distill::distill_article:\r\n    self_contained: false\r\n---\r\n\r\nAgregar código 👩🏽‍💻\r\nPara agregar código en tu post y que no salga por otro lado el titulo, texto y código hay que tener espacios entre ellos.\r\n\r\n\r\nTitulo\r\n\r\nTexto\r\n\r\nChunk\r\n\r\n\r\n\r\nCSS 👩🏽‍🎨\r\nEn el paquete distill puedes usar la función create_theme, y poner el nombre que le quieres dar al archivo.\r\n\r\n\r\ncreate_theme(\"mi_estilo\")\r\n\r\n\r\n\r\nTe va a crear un archivo css que puedes modificar para cambiar el aspecto de tu página. Una vez creado y/o modificado, debes incluirlo en site.yml.\r\n\r\n\r\noutput: \r\n  distill::distill_article:\r\n    theme: mi_estilo.css\r\n\r\n\r\n\r\nPuedes cambiar el estilo de las letras, y los colores. Ver más recursos de estilos.\r\nCitas 🌹\r\nPara que aparezcan o no las citas, hay que abrir el site.yml y escribir:\r\n\r\n\r\ncollections:\r\n  posts:\r\n    citations: false\r\n\r\n\r\n\r\nAgregar botones 🛎️\r\nSe pueden agregar botones en la página para los enlaces. Para la inspiración y fuente ve al sitio de Ella Kaye\r\nPara agregar botones, empieza por instalar el paquete distilltools desde github.\r\n\r\n\r\n#remotes::install_github(\"EllaKaye/distilltools\")\r\nlibrary(distilltools)\r\n\r\n\r\n\r\nNota Si tienes algunos problemas con rlang, puedes intentar reiniciar sesión y reinstalar el paquete rlang.\r\nPara agregar iconos usa la función icon_link\r\n\r\n\r\nicon_link(icon = \"fas fa-images\",\r\n          text = \"slides\",\r\n          url = \"https://miriamll.github.io/Tutorial_distill_es/TutorialPaginaDistill\")\r\n\r\n\r\n\r\nPara elegir el icono, entrar a la pagina fontawesome: (1) Elige el icono; (2) Busca la información de html; (3) Copia lo que esta dentro de < y >.\r\nPara cambiar como se ven los botones, hay que especificarlo en el css. Por ejemplo:\r\n\r\n.icon-link {\r\n    background-color: transparent;\r\n    color: #D40067;\r\n    border: 1px solid;\r\n    border-color: #D40067;\r\n    padding: 5px .4rem 5px .4rem;\r\n    /*margin: 4px;*/\r\n    margin-top: 4px;\r\n    margin-right: 8px;\r\n    margin-bottom: 4px;\r\n    border-radius: 5px; /* Rounded edges */\r\n}\r\n\r\n.icon-link:hover {\r\n    background-color: #D40067;\r\n    border-color: #D40067;\r\n    color: white;\r\n}\r\n\r\nBuild 🔨\r\nEn la pestaña donde tienes environment, history o git, debe aparecer una nueva pestaña con el nombre de Build\r\nPuedes elegir esta pestaña, y darle click al martillo que dice Build Website para ver como quedo tu página.\r\nEn la pestaña Viewer… Ya puedes ver tu pagina distill 🥳.\r\nDe Rstudio a online 👩🏽‍🚀\r\nUno de los retos es poner tu pagina online.\r\nSe pueden subir los archivos directamente a: Netlify\r\nSe pueden subir los archivos a github, y conectarlo con Netlify.Recomendado porque puedes estar actualizando los materiales desde RStudio.\r\nDe entrada, tu sitio sera tunombre.netlify.app. Si quieres que sea tunombre.com u otro, cuesta alrededor de 12 dolares, pero varia mucho.\r\nPublicar sitio por Lisa Lendway\r\nCréditos y recursos 🚀\r\nTutoriales Crear articulo en distill Crear sitio (Re-)introducing Distill for R Markdown Ejemplos de paginas\r\nBlogs Galeria Paso a paso: crear un sitio por Lisa Lendway\r\nVideos RLadies Crear un sitio por Lisa Lendway\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-06-03-paginadistill/blog5.jpg",
    "last_modified": "2021-10-27T11:15:57+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-05-14-spheniscus/",
    "title": "spheniscus",
    "description": "Un paquete para limpiar datos de TDR y calcular parametros de buceo durante los viajes de alimentación.",
    "author": [
      {
        "name": "Miriam Lerma",
        "url": {}
      }
    ],
    "date": "2021-05-15",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nIntro\r\nInstalación\r\nDatos\r\nTDR_raw 📥\r\nTDR_dives 🤿\r\n\r\nFunciones\r\nextract_rawdata 🧹\r\nextract_trip ✂️\r\nplot_depth 🎨\r\ncorrect_zero 📐\r\nidentify_dives 🐟\r\ndive_parameters 🐧\r\n\r\nCitar\r\n\r\n\r\n\r\n\r\nIntro\r\nEl objetivo de este paquete es:\r\nHacer disponibles datos crudos de TDR para que se familiaricen con el formato.\r\nAyudarte a limpiar los datos de TDR para obtener parámetros de buceo de los animales muestreados.\r\n\r\n English\r\n\r\nInstalación\r\nEl paquete estará disponible solo por GitHub\r\n\r\n\r\ninstall.packages(\"devtools\")\r\ndevtools::install_github(\"MiriamLL/spheniscus\")\r\n\r\n\r\n\r\n\r\n\r\nlibrary(spheniscus)\r\n\r\n\r\n\r\nDatos\r\nTDR_raw 📥\r\nAgrega los datos crudos como objeto.\r\n\r\n\r\nTDR_raw<-TDR_raw\r\n\r\n\r\n\r\nLas columnas no están separadas ya que primero hay que cortar partes del archivo. \r\nTDR_dives 🤿\r\nIncluye todos los buceos durante el viaje. \r\n\r\n\r\nTDR_dives<-TDR_dives\r\n\r\n\r\n\r\nFunciones\r\nextract_rawdata 🧹\r\nExtrae la información de profundidad de los datos crudos de los dispositivos.  En los dispositivos TDR (Cefas G5+) la presión se empieza a medir después de ‘Data Block 1’ y termina de medir presión cuando empieza ‘Data Block 2’. Estos nombres fueron usados como separadores en row_start y row_end. Si tu dispositivo usa otros separadores como por ejemplo ‘Data Block 0’ hay que ajustar acorde.\r\n\r\n\r\nTDR_pressure<-extract_pressure(data=TDR_raw, \r\n                          row_start='Data Block 1', \r\n                          row_end = 'Data Block 2')\r\n\r\n\r\n\r\nextract_trip ✂️\r\nCorta periodos de tiempo de acuerdo a nuestro interés.  La información se obtuvo de dispositivos GPS, trip_start es cuando salieron de la colonia y trip_end cuando regresaron.\r\nLos datos fueron recortados para incluir sólo información durante el viaje de alimentación.\r\n\r\n\r\nTDR_trip<-extract_trip(data=TDR_pressure,\r\n                   timeformat=\"%d-%m-%Y %H:%M:%S\",\r\n                   trip_start=\"30-11-2018 20:43:24\",\r\n                   trip_end=\"01-12-2018 20:16:19\")\r\n\r\n\r\n\r\nplot_depth 🎨\r\nCrea un grafico con el perfil de buceos. Marca el cero con una linea roja.  El objetivo de este gráfico es que te permita decidir si debes corregir el cero.\r\n\r\n\r\nplot_depth(TDR_trip = TDR_trip,\r\n                   depth_column='Pressure',\r\n                   time_column='daytime')\r\n\r\n\r\n\r\n\r\ncorrect_zero 📐\r\nEsta función te permite corregir el cero usando un factor de corrección.  En el ejemplo, corregí el cero usando -0.80 m. Este valor fue ajustado de manera manual.\r\n\r\n\r\nTDR_corrected<-correct_zero(TDR_trip = TDR_trip,\r\n             depth_column='Pressure',\r\n             extra_correction=-0.80)\r\n\r\n\r\n\r\nPuedes volver a crear el gráfico para confirmar que se corrigió el cero.\r\n\r\n\r\nplot_depth(TDR_trip = TDR_corrected,\r\n            depth_column='corrected_depth',\r\n            time_column='daytime')\r\n\r\n\r\n\r\n\r\nidentify_dives 🐟\r\nEsta función identifica cada buceo como unidades individuales, y les asigna a cada inmersión un numero, una profundidad media de buceo, una profundidad máxima de buceo, una duración media de buceo y una duración máxima de buceo.\r\nEn el ejemplo, los buceos reales fueron considerados cuando el animal se encontraba más profundo de 3 metros.\r\n\r\n\r\nTDR_dives<-identify_dives(TDR_corrected=TDR_corrected,\r\n               real_dives=3,\r\n               depth_column='corrected_depth')\r\n\r\n\r\n\r\ndive_parameters 🐧\r\nEsta función calcula los parámetros del viaje completo.\r\nIncluye:\r\n- promedio de la profundidad máxima de buceo,\r\n- desviación estándar de la profundidad máxima de buceo,\r\n- el máximo de profundidad, la duración promedio de los buceos,\r\n- la desviación estándar de la duración de los buceos, y\r\n- la duración máxima de buceo, así como\r\n- el total de buceos durante el viaje.Nota La profundidad de buceo se da en metros, la duración en segundos.\r\n\r\n\r\ndive_parameters<-calculate_diveparams(TDR_dives)\r\n\r\n\r\n\r\n\r\nmax_depth_mean\r\nmax_depth_sd\r\nmax_depth_max\r\ndive_duration_mean\r\ndive_duration_sd\r\ndive_duration_max\r\nn_dives\r\n11.7163\r\n4.836995\r\n39.21\r\n18.86549\r\n7.438373\r\n41\r\n565\r\n\r\nCitar\r\nEste script acompaña una publicación en pingüinos por Lerma et al. (en preparación)\r\nPara dar atribución:\r\nLerma, M (2021). Package spheniscus (Version v1.0). Zenodo. http://doi.org/10.5281/zenodo.4709837\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-05-14-spheniscus/spheniscus-logo.png",
    "last_modified": "2021-05-19T09:33:47+02:00",
    "input_file": {},
    "preview_width": 460,
    "preview_height": 464
  },
  {
    "path": "posts/2021-05-14-sula/",
    "title": "sula",
    "description": "Un paquete para editar datos de GPS y calcular parámetros de los viajes de alimentación.",
    "author": [
      {
        "name": "Miriam Lerma",
        "url": {}
      }
    ],
    "date": "2021-05-15",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nIntro\r\nInstalación 🤖\r\n\r\nDatos\r\nUn individuo 💃🏽\r\nMultiples individuos 👯‍\r\nNotas de campo ✏️\r\n\r\nFunciones\r\najustar_hora 🕐\r\nrecortar_periodo ✂️\r\nlocalizar_nido 🐣\r\nidentificar_viajes️🛩️\r\ncontar_viajes 🧮\r\ndist_colonia 📏\r\ndist_puntos 📐\r\ncalcular_duracion ⏳\r\ncalcular_totaldist 📐\r\ncalcular_maxdist 📏\r\ncalcular_tripparams 📐⏳📏\r\nrecortar_por_ID ✂️✂️✂️\r\nlocalizar_nidos 🐣🐣🐣\r\npreparar_varios 🔌🔌🔌\r\ntripparams_varios 📐📐📐\r\n\r\nOtras herramientas\r\nInterpolar tus viajes 🛠️\r\n\r\nCitar\r\n\r\n\r\n\r\n\r\nIntro\r\nEste paquete contiene:\r\nDatos de tracks de kena (Sula dactylatra) colectados en Rapa Nui para replicar los ejemplos 🗿\r\nTrece funciones para limpiar y calcular parámetros de viajes a partir de datos GPS\r\n\r\n English\r\n\r\nInstalación 🤖\r\nPuedes instalar este paquete desde GitHub usando:\r\n\r\n\r\n# install.packages(\"devtools\")\r\ndevtools::install_github(\"MiriamLL/sula\")\r\n\r\n\r\n\r\nDatos\r\nCarga la librería\r\n\r\n\r\nlibrary(sula)\r\n\r\n\r\n\r\nUn individuo 💃🏽\r\nCarga los datos de GPS de un individuo.\r\n\r\n\r\nhead(GPS_01)\r\n\r\n\r\n\r\nNota Incluye columna con fecha y hora en formato POSIXct\r\nMultiples individuos 👯‍\r\nCarga los datos de GPS de diez individuos.\r\n\r\n\r\nhead(GPS_raw)\r\n\r\n\r\n\r\nNota Son datos en crudo por lo que las horas no están corregidas.\r\nNotas de campo ✏️\r\nIncluye el periodo cuando se colocó el dispositivo hasta cuando se retiró.\r\n\r\n\r\nNotas<-Notas\r\n\r\n\r\n\r\nNota: no corresponden al periodo real de muestreo. Se proveen estos datos para practicar las funciones.\r\nFunciones\r\najustar_hora 🕐\r\nEsta función corrige el tiempo de acuerdo a la zona horaria, se necesita especificar los datos GPS, el nombre de la columna que contiene datos de hora y día, el formato en el que están éstos datos, y el número de horas de diferencia a corregir de acuerdo al GMT.\r\n\r\n\r\nGPS_gmt<-ajustar_hora(GPS_data = GPS_raw,\r\n                      dia_col = 'DateGMT',\r\n                      hora_col = 'TimeGMT',\r\n                      formato=\"%d/%m/%Y %H:%M:%S\",\r\n                      dif_hor = 5)\r\n\r\n\r\n\r\nRegresa el mismo data frame con dos columnas adicionales: dia_hora con el día y fecha original y hora_corregida con la hora correspondiente al GMT.\r\nrecortar_periodo ✂️\r\nEste función permite recortar periodos dentro de los datos.\r\n\r\n\r\nGPS_recortado<-recortar_periodo(GPS_data=GPS_01,\r\n                                inicio='02/11/2017 18:10:00',\r\n                                final='05/11/2017 14:10:00',\r\n                                dia_col='DateGMT',\r\n                                hora_col='TimeGMT',\r\n                                formato=\"%d/%m/%Y %H:%M:%S\")\r\n\r\n\r\n\r\nNota: El formato de tiempo y hora debe ser el mismo formato que el formato de inicio y final.\r\nlocalizar_nido 🐣\r\nEsta función usa el primer valor de los datos de GPS como punto de la colonia, sirve para identificar la localización del nido por individuo. Regresa un nuevo data frame con dos columnas: Latitude y Longitude correspondientes a la localización del nido.\r\n\r\n\r\nnest_loc<-localizar_nido(GPS_data = GPS_01,\r\n                          lat_col=\"Latitude\",\r\n                          lon_col=\"Longitude\")\r\n\r\n\r\n\r\nNota Asume que los datos del nido corresponde al primer registro de GPS.\r\nidentificar_viajes️🛩️\r\nEsta función agrega una columna de acuerdo a distancia de la colonia para determinar si esta en un viaje de alimentación o no.\r\n\r\n\r\nGPS_trip<-identificar_viajes(GPS_data=GPS_01,\r\n                        nest_loc=nest_loc,\r\n                        distancia_km=1)\r\n\r\n\r\n\r\nEn la columna llamada trip:N=dentro de la distancia considerada como no viaje de alimentación, yY=viaje de alimentación.\r\ncontar_viajes 🧮\r\nEsta función agrega una columna con el número del viaje y elimina locaciones dentro de el radio de la colonia.\r\n\r\n\r\nGPS_edited<-contar_viajes(GPS_data=GPS_trip)\r\n\r\n\r\n\r\ndist_colonia 📏\r\nAgrega una columna con la distancia de la colonia de cada punto. Regresa el mismo data frame con una nueva columna llamada ’maxdist_km.\r\n\r\n\r\nGPS_dist<-dist_colonia(GPS_edited = GPS_edited, \r\n                       nest_loc=nest_loc)\r\n\r\n\r\n\r\nNota usa CRS: 4326. Enlaces: ¿referencia geográfica?, ¿cual usar?\r\ndist_puntos 📐\r\nAgrega una columna con la distancia entre cada punto. Regresa el mismo data frame con una nueva columna llamada ‘pointsdist_km’.\r\n\r\n\r\nGPS_dist<-dist_puntos(GPS_data = GPS_edited,\r\n                      separador='trip_number')\r\n\r\n\r\n\r\nNota usa CRS: 4326. Incluye NAs al inicio del viaje. Enlaces: ¿referencia geográfica?, ¿cual usar?\r\ncalcular_duracion ⏳\r\nIdentifica el inicio y el final del viaje y calcula la duración. Regresa un nuevo data frame con 4 columnas: trip_id, trip_start, trip_end y duration.\r\n\r\n\r\nduracion<-calcular_duracion(GPS_data = GPS_edited,\r\n                            col_diahora = \"tStamp\",\r\n                            formato = \"%Y-%m-%d %H:%M:%S\",\r\n                            unidades=\"hours\",\r\n                            separador=\"trip_number\")\r\n\r\n\r\n\r\nNota la duración se calcula en valores númericos.\r\ncalcular_totaldist 📐\r\nCalcula distancia recorrida de la colonia por viaje.\r\nDebe contener la columna Longitude y Latitude con estos nombres.\r\nRegresa un nuevo data frame con la distancia total recorrida por viaje.\r\n\r\n\r\ntotaldist_km<-calcular_totaldist(GPS_data= GPS_edited,\r\n                                 separador=\"trip_number\")\r\n\r\n\r\n\r\ncalcular_maxdist 📏\r\nObtiene la distancia máxima de la colonia por viaje.\r\nDebe contener la columna Longitude y Latitude con estos nombres.\r\nRegresa un nuevo data frame con la distancia máxima de la colonia por viaje.\r\n\r\n\r\nmaxdist_km<-calcular_maxdist(GPS_data = GPS_edited, \r\n                             nest_loc=nest_loc,\r\n                             separador=\"trip_number\")\r\n\r\n\r\n\r\ncalcular_tripparams 📐⏳📏\r\nCalcula la duración de los viajes, la distancia máxima de la colonia y la distancia total recorrida. Regresa un nuevo data frame con los parámetros por viaje.\r\n\r\n\r\ntrip_params<-calcular_tripparams(GPS_data = GPS_edited,\r\n                              diahora_col = \"tStamp\",\r\n                              formato = \"%Y-%m-%d %H:%M:%S\",\r\n                              nest_loc=nest_loc,\r\n                              separador=\"trip_number\")\r\n\r\n\r\n\r\nrecortar_por_ID ✂️✂️✂️\r\nPuedes recortar periodos en los viajes.\r\nPara el ejemplo hay que tener dos data frames:\r\nUno con los datos de GPS incluyendo las columnas DateGMT,TimeGMT y IDs.\r\nSi no tienen estos nombres favor de renombrarlas.\r\nEl otro data frame son los datos de campo y deben incluir las columnas ‘IDs’, ‘Hora_inicio’ y ‘Hora_final’.\r\nSi no tienen esos nombres favor de renombrarlas.\r\n\r\n\r\nGPS_recortados<-recortar_por_ID(GPS_data=GPS_raw,\r\n                                Notas=Notas,\r\n                                formato=\"%d/%m/%Y %H:%M:%S\")\r\n\r\n\r\n\r\nlocalizar_nidos 🐣🐣🐣\r\nEsta función asume que los datos del nido corresponde al primer registro de GPS y regresa las coordenadas de los nidos para cada individuo.\r\n\r\n\r\nNidos_df<-localizar_nidos(GPS_data=GPS_raw,\r\n                         lon_col=\"Longitude\",\r\n                         lat_col=\"Latitude\",\r\n                         ID_col=\"IDs\")\r\n\r\n\r\n\r\npreparar_varios 🔌🔌🔌\r\nEsta función sirve para preparar los datos antes de calcular parámetros por individuo.\r\nEn la función debes especificar: el nombre de tu data frame, el nombre de la columna de los ID (identificadores por individuo), el nombre de la columna de la longitud y el nombre de la columna de la latitud. Para elegir los viajes elige un buffer de fuera de la colonia (distancia_km). Elige también tu sistema de referencia geográfica.\r\n\r\n\r\nGPS_preparado<-preparar_varios(GPS_data=GPS_raw,\r\n                               ID_col=\"IDs\",\r\n                               lon_col=\"Longitude\",\r\n                               lat_col=\"Latitude\",\r\n                               distancia_km=1,\r\n                               sistema_ref=\"+init=epsg:4326\")\r\n\r\n\r\n\r\nNota que al usar esta función aparecerán warnings. Estos warnings advierten sobre la transformación del objeto espacial.\r\nEnlaces: ¿referencia geográfica?, ¿cual usar?\r\ntripparams_varios 📐📐📐\r\nPara calcular parámetros de viajes de varios individuos especifica el nombre de la columna que contiene los identificadores por individuo, el nombre de la columna que contiene información número del viaje y el nombre de la columna que contiene información del día y hora en formato POSTIXct.\r\nNota para usar esta función tus datos deben tener una columna día y hora, si no es así, puedes hacerlo de manera manual o usar la función ajustar_hora de este paquete y poner 0 en la diferencia horaria.\r\n\r\n\r\nGPS_preparado<-ajustar_hora(GPS_data = GPS_preparado,\r\n                            dif_hor = 0,\r\n                            dia_col = 'DateGMT',\r\n                            hora_col = 'TimeGMT',\r\n                            formato=\"%d/%m/%Y %H:%M:%S\")\r\n\r\n\r\n\r\n\r\n\r\ntrip_params<-tripparams_varios(GPS_data=GPS_preparado,\r\n                               col_ID = \"IDs\",\r\n                               col_diahora=\"hora_corregida\",\r\n                               separador=\"trip_number\")\r\n\r\n\r\n\r\nOtras herramientas\r\nInterpolar tus viajes 🛠️\r\nSi tienes intervalos disparejos, y necesitas interpolar tus datos puedes establecer un intervalo Tu data frame debe contener las columnas Longitud, Latitud, ID, numero de viaje, y hora y dia en formato POSTIXct\r\n\r\n\r\nGPS_interpolated<-interpolar_viajes(GPS_preparado=GPS_preparado, \r\n                                    intervalo=\"900 sec\", \r\n                                    col_diahora=\"dia_hora\", \r\n                                    separador='trip_number',\r\n                                    col_ID='IDs')\r\n\r\n\r\n\r\nCitar\r\nLerma M (2021) Package sula. Zenodo. ttps://doi.org/10.5281/zenodo.4740920\r\nLos datos de prueba vienen de la publicación: Lerma M, Dehnhard N, Luna-Jorquera G, Voigt CC, Garthe S (2020) Breeding stage, not sex, affects foraging characteristics in masked boobies at Rapa Nui. Behavioral ecology and sociobiology 74: 149. 🔓\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-05-14-sula/sula-logo.png",
    "last_modified": "2021-12-14T10:55:00+01:00",
    "input_file": {},
    "preview_width": 454,
    "preview_height": 464
  },
  {
    "path": "posts/2021-04-28-otros/",
    "title": "Talleres diversos",
    "description": "Como crear tus propios paquetes, o como crear tu pagina web.",
    "author": [
      {
        "name": "Miriam Lerma",
        "url": {}
      }
    ],
    "date": "2021-04-28",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nIntro\r\n\r\nIntro\r\nHay varias maneras de aprender, aqui te muestro el formato de blog, donde puedes ver detalles en el texto, pero si estas en celular, que es frecuentemente mi caso, lo que hago es que\r\nTaller para crear tus propios paquetes.\r\n\r\n Presentación Descargar\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "https://raw.githubusercontent.com/MiriamLL/Desarrollo_paquetes/main/Figuras/Portada1.png",
    "last_modified": "2021-06-03T12:36:51+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-29-rmd/",
    "title": "Clase de Rmd",
    "description": "Desde como crear documentos en Rmd hasta como compartirlos.",
    "author": [
      {
        "name": "Miriam Lerma",
        "url": {}
      }
    ],
    "date": "2021-03-16",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nRmarkdown\r\nRmarkdown.\r\nRmarkdown para escribir artículos\r\nPresentar tus resultados usando Xaringan.\r\nEstilizar tus dispositivas Xaringan.\r\nGithub, Zenodo y Git.\r\nReproducibilidad.\r\n\r\n\r\n\r\n\r\n\r\nRmarkdown\r\nBienvenido!\r\nEste material fue preparado para técnicos y estudiantes de posgrado del Centro de Investigación de Alimentación y Desarrollo CIAD.\r\nNo obstante, espero sea de ayuda para cualquiera que tenga intenciones de aprender R.\r\nIré subiendo materiales conforme se vayan actualizando.\r\nRmarkdown.\r\nEn esta clase aprenderás como crear documentos en Rmd. \r\n\r\n Presentación Descargar\r\n\r\n\r\n\r\n\r\nRmarkdown para escribir artículos\r\nEn esta clase aprenderás como agregar citas y formato de revista. \r\n\r\n Presentación Descargar\r\n\r\n\r\n\r\n\r\nPresentar tus resultados usando Xaringan.\r\nEn esta clase aprenderás como crear presentaciones en Xaringan. Podrás incluir tablas y figuras sin salir de RStudio. \r\n\r\n Presentación Descargar\r\n\r\n\r\n\r\n\r\nEstilizar tus dispositivas Xaringan.\r\nEn esta clase aprenderás como cambiar el estilo de letras o colores de tus presentaciones en Xaringan. También aprenderás como compartirlas ya sea en github o en pdf. \r\n\r\n Presentación Descargar\r\n\r\n\r\n\r\n\r\nGithub, Zenodo y Git.\r\nEn esta clase aprenderás como crear un repositorio en github, como utilizar Zenodo para darle un DOI a nuestros materiales y los básicos de Git. \r\n\r\n Presentación Descargar\r\n\r\n\r\n\r\n\r\nReproducibilidad.\r\nEn esta clase verás básicos de reproducibilidad en la ciencia y en las publicaciones. \r\n\r\n Presentación Descargar\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "https://raw.githubusercontent.com/MiriamLL/Curso_CIAD/main/Figuras/Clase09.png",
    "last_modified": "2021-05-18T10:19:15+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-16-biologging/",
    "title": "Biologging",
    "description": "Desde como descargar tus datos de GPS, como cortar partes de interés, hasta hacer tus primeros gráficos con datos de tracking y exportarlos.",
    "author": [
      {
        "name": "Miriam Lerma",
        "url": {}
      }
    ],
    "date": "2021-02-16",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nBiologging\r\nDescargar tus datos.\r\nCorregir horas.\r\nEditar GPS.\r\n\r\n\r\nBiologging\r\nBienvenido!\r\nEste material fue preparado para estudiantes de posgrado de la Universidad de Guadalajara.\r\nNo obstante, espero sea de ayuda para cualquiera que tenga intenciones de aprender como manejar sus datos de GPS en R.\r\nIré subiendo materiales conforme se vayan actualizando.\r\nDescargar tus datos.\r\nEn esta clase aprenderás a descargar tus datos de GPS, unirlos y realizar tus primeras gráficas. \r\n\r\n Presentación Descargar\r\n\r\n\r\n\r\n\r\nCorregir horas.\r\nEn esta clase aprenderás a corregir la hora en tus datos de GPS de acuerdo a tu GMT. \r\n\r\n Presentación Descargar\r\n\r\n\r\n\r\n\r\nEditar GPS.\r\nEn esta clase aprenderás a cortar periodos de tiempo de tus datos GPS. \r\n\r\n Presentación Descargar\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "https://raw.githubusercontent.com/MiriamLL/Curso_tracking/main/03Figuras/CortarDatosGPS.png",
    "last_modified": "2021-10-27T11:44:06+02:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-03-01-IntroaR/",
    "title": "Clase R desde cero",
    "description": "Desde como abrir R y RStudio hasta como exportar tus gráficos, la idea es que este curso te haga sentir cómodo trabajando tus datos y análisis en R.",
    "author": [
      {
        "name": "Miriam Lerma",
        "url": {}
      }
    ],
    "date": "2021-01-28",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nClase de R\r\nIntro a R.\r\nCargar tus datos.\r\nGráficos.\r\nOperaciones.\r\nOrdenar, unir y exportar.\r\nProyectos.\r\nModelo lineal simple.\r\nAnalisis de varianzas.\r\nModelos mixtos.\r\n\r\n\r\n\r\n\r\n\r\nClase de R\r\nBienvenido!\r\nEste material fue preparado para técnicos y estudiantes de posgrado del Centro de Investigación de Alimentación y Desarrollo CIAD.\r\nNo obstante, espero sea de ayuda para cualquiera que tenga intenciones de aprender R.\r\nIré subiendo materiales conforme se vayan actualizando.\r\nIntro a R.\r\nEn esta clase aprenderás a abrir RStudio e identificar sus partes. \r\n\r\n Presentación Descargar\r\n\r\n\r\n\r\n\r\nCargar tus datos.\r\nEn esta clase aprenderás a como cargar paquetes, seleccionar tu directorio y cargar tus datos en R. \r\n\r\n Presentación Descargar\r\n\r\n\r\n\r\n\r\nGráficos.\r\nEn esta clase aprenderás como funciona ggplot2 y como crear tus propios gráficos.\r\n\r\n Presentación Descargar\r\n\r\n\r\n\r\n\r\nOperaciones.\r\nEn esta clase aprenderás algunas funciones básicas para realizar operaciones matemáticas en R y como moverte entre tus columnas y filas. \r\n\r\n Presentación Descargar\r\n\r\n\r\n\r\n\r\nOrdenar, unir y exportar.\r\nEn esta clase aprenderás algunas funciones de tidyverse para poder ordenar tus columnas, limpiar tus datos, unir diferentes archivos y exportar tus nuevos data frames.\r\n\r\n Presentación Descargar\r\n\r\n\r\n\r\n\r\nProyectos.\r\nEn esta clase aprenderás porque es importante trabajar por proyectos, como crear y compartir un proyecto.\r\n\r\n Presentación Descargar\r\n\r\n\r\n\r\n\r\nModelo lineal simple.\r\nEn esta clase aprenderás como explorar tus datos, cuales son los argumentos para un modelo lineal simple en R y como agregar la linea de ajuste a tu gráfico.\r\n\r\n Presentación Descargar\r\n\r\n\r\n\r\n\r\nAnalisis de varianzas.\r\nEn esta clase aprenderás como convertir a factor, cuales son los argumentos para un análisis de varianza en R y como crear gráficos para visualizar tus resultados del análisis.\r\n\r\n Presentación Descargar\r\n\r\n\r\n\r\n\r\nModelos mixtos.\r\nEsta clase es una introducción a los modelos mixtos y a la selección de modelos usando el AIC.\r\n\r\n Presentación Descargar\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "https://raw.githubusercontent.com/MiriamLL/Curso_CIAD/main/Figuras/Clase1.png",
    "last_modified": "2021-05-18T10:19:30+02:00",
    "input_file": {}
  }
]
